[{"D:\\My-proect\\social-network\\src\\index.tsx":"1","D:\\My-proect\\social-network\\src\\reportWebVitals.js":"2","D:\\My-proect\\social-network\\src\\App.tsx":"3","D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx":"4","D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx":"5","D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx":"6","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx":"7","D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx":"8","D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx":"9","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx":"10","D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx":"11","D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx":"12","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx":"13","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx":"14","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx":"15","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx":"16","D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx":"17","D:\\My-proect\\social-network\\src\\api\\api.tsx":"18","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx":"19","D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx":"20","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx":"21","D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx":"22","D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts":"23","D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx":"24","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx":"25","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx":"26","D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx":"27","D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx":"28","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx":"29","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx":"30","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx":"31","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx":"33","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx":"34","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts":"35","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx":"36"},{"size":760,"mtime":1627717987216,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1627722497387,"results":"39","hashOfConfig":"38"},{"size":2018,"mtime":1628480209379,"results":"40","hashOfConfig":"38"},{"size":935,"mtime":1628479868227,"results":"41","hashOfConfig":"38"},{"size":2398,"mtime":1629273931230,"results":"42","hashOfConfig":"38"},{"size":1348,"mtime":1627718226174,"results":"43","hashOfConfig":"38"},{"size":3524,"mtime":1629443245336,"results":"44","hashOfConfig":"38"},{"size":5799,"mtime":1628778726049,"results":"45","hashOfConfig":"38"},{"size":1081,"mtime":1627719240614,"results":"46","hashOfConfig":"38"},{"size":2077,"mtime":1628480849568,"results":"47","hashOfConfig":"38"},{"size":738,"mtime":1628477352761,"results":"48","hashOfConfig":"38"},{"size":177,"mtime":1627719324431,"results":"49","hashOfConfig":"38"},{"size":190,"mtime":1627719171195,"results":"50","hashOfConfig":"38"},{"size":196,"mtime":1627719834912,"results":"51","hashOfConfig":"38"},{"size":2292,"mtime":1627718763753,"results":"52","hashOfConfig":"38"},{"size":2458,"mtime":1627998776509,"results":"53","hashOfConfig":"38"},{"size":2843,"mtime":1628608676975,"results":"54","hashOfConfig":"38"},{"size":1481,"mtime":1629443275196,"results":"55","hashOfConfig":"38"},{"size":704,"mtime":1627719585324,"results":"56","hashOfConfig":"38"},{"size":753,"mtime":1627719039660,"results":"57","hashOfConfig":"38"},{"size":958,"mtime":1627718609800,"results":"58","hashOfConfig":"38"},{"size":2786,"mtime":1627725827029,"results":"59","hashOfConfig":"38"},{"size":303,"mtime":1627718552063,"results":"60","hashOfConfig":"38"},{"size":831,"mtime":1627717916982,"results":"61","hashOfConfig":"38"},{"size":190,"mtime":1627718894577,"results":"62","hashOfConfig":"38"},{"size":291,"mtime":1627718666144,"results":"63","hashOfConfig":"38"},{"size":1030,"mtime":1627719967052,"results":"64","hashOfConfig":"38"},{"size":186,"mtime":1627924071497,"results":"65","hashOfConfig":"38"},{"size":1976,"mtime":1627719443073,"results":"66","hashOfConfig":"38"},{"size":1167,"mtime":1629441172361,"results":"67","hashOfConfig":"38"},{"size":975,"mtime":1627719381308,"results":"68","hashOfConfig":"38"},{"size":1662,"mtime":1627719700675,"results":"69","hashOfConfig":"38"},{"size":626,"mtime":1627719515872,"results":"70","hashOfConfig":"38"},{"size":1139,"mtime":1628479861019,"results":"71","hashOfConfig":"38"},{"size":644,"mtime":1628608551372,"results":"72","hashOfConfig":"38"},{"size":1349,"mtime":1629443772412,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"q870p8",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},"D:\\My-proect\\social-network\\src\\index.tsx",[],["161","162"],"D:\\My-proect\\social-network\\src\\reportWebVitals.js",[],["163","164"],"D:\\My-proect\\social-network\\src\\App.tsx",["165"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Music } from './сomponents/Music/Music';\r\nimport { Navbar } from './сomponents/Navbar/Navbar';\r\nimport { News } from './сomponents/News/News';\r\nimport { Settings } from './сomponents/Settings/Settings';\r\nimport { Route } from 'react-router-dom';\r\nimport ProfileContainer from './сomponents/Profile/ProfileContainer';\r\nimport { HeaderContainer } from './сomponents/Header/HeaderContainer';\r\nimport Dialogs from './сomponents/Dialogs/Dialogs';\r\nimport UsersComponent from './сomponents/Users/UsersContainer'\r\nimport Login from './сomponents/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializedApp } from './redux/app-reducer';\r\nimport { RootState } from './redux/redux-store';\r\nimport { Preloader } from './сomponents/common/preloader/Preloader';\r\n\r\n\r\ntype AppType = {\r\n  initializedApp: () => void\r\n  initialized: boolean\r\n};\r\n\r\nclass App extends React.Component<AppType> {\r\n  componentDidMount() {\r\n    this.props.initializedApp();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/profile/:userId?'\r\n            render={() =>\r\n              < ProfileContainer />} />\r\n          <Route path='/messages'\r\n            render={() => <Dialogs />} />\r\n          <Route path='/users'\r\n            render={() => <UsersComponent />} />\r\n          <Route path='/login'\r\n            render={() => <Login />} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  initialized: state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps, { initializedApp })(App)\r\n\r\n","D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx",[],"D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx",["166"],"D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx",["167","168"],"import React from 'react';\r\n\r\n\r\nexport type DialogsType = {\r\n  id: number\r\n  name: string\r\n};\r\n\r\nexport type MessagesType = {\r\n  id: number\r\n  message: string\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionType = ReturnType<typeof sendMessageC>\r\n\r\n\r\nconst SEND_MESSAGE = 'SEND-MASSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Yra' },\r\n    { id: 2, name: 'Dima' },\r\n    { id: 3, name: 'Vlad' },\r\n    { id: 4, name: 'Dmitry' },\r\n    { id: 5, name: 'Alex' },\r\n    { id: 6, name: 'Natasha' },\r\n  ] as Array<DialogsType>,\r\n  messages: [\r\n    { id: 1, message: 'HI' },\r\n    { id: 2, message: 'How is your it-kamasutra?' },\r\n    { id: 3, message: 'YO' },\r\n    { id: 4, message: 'YO' },\r\n  ] as Array<MessagesType>,\r\n};\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageC = (newMessageBody: string) => {\r\n  return {\r\n    type: SEND_MESSAGE, \r\n    newMessageBody,\r\n  } as const\r\n};\r\n\r\n\r\nexport default dialogsReducer","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx",["169"],"D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx",["170"],"import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props: any) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx",["171"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props: any) => {\r\n    return(\r\n        <div>\r\n          Our music is here\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx",["172"],"import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props: any) => {\r\n    return(\r\n        <div>\r\n          Do not even think\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx",["173","174","175","176","177"],"import React, { ChangeEvent, KeyboardEvent } from 'react';\r\nimport { DialogsType, MessagesType, sendMessageC } from '../../redux/dialogs-reduser';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n\r\n};\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    const messagesElement = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    const newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageC(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    wihtAuthRedirect\r\n)(Dialogs)","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx",[],"D:\\My-proect\\social-network\\src\\api\\api.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx",["178","179"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { InitStateType } from '../../redux/auth-reducer';\r\nimport s from './Header.module.css';\r\nimport { logout } from './../../redux/auth-reducer';\r\n\r\n\r\ntype HeaderPropsType = {\r\n  data: InitStateType\r\n  logout: () => void\r\n}\r\n\r\n\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://cdn.dribbble.com/users/1265223/screenshots/5321233/samurai.png'></img>\r\n      <div className={s.loginBlock}>\r\n        {props.data.isAuth\r\n          ? <div>{props.data.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx",["180"],"import React from 'react';\r\nimport { UsersType } from '../../redux/users-reducer';\r\nimport s from './users.module.css'\r\nimport userPhoto from '..//..//assets/images/ava.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype UsersFyncPropsType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport const UsersFunc = (props: UsersFyncPropsType) => {\r\n\r\n    const pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <>\r\n            <div className={s.pageUsers}>\r\n                {pages.map(p => {\r\n                    return (\r\n                        <span\r\n                            // @ts-ignore\r\n                            className={props.carrentPage === p && s.selectedPage}\r\n                            onClick={(e) => { props.onPageChanged(p) }}\r\n                        >{p}</span>\r\n                    )\r\n                })}\r\n            </div>\r\n            {props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'./profile/' + u.id}>\r\n                            <img src={u.photos.small || userPhoto} className={s.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed ?\r\n                            <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {\r\n                                    props.unfollow(u.id);\r\n                                }}>Unfollow</button> :\r\n                            <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </>\r\n\r\n    )\r\n} ","D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts",[],"D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx",["181"],"import loading from '../../../assets/images/loading.svg'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            {<img src={loading} />}\r\n        </div>\r\n    )\r\n}; ","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx",["182","183"],"import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { AddMyPostFromRedux } from './AddMyPostForm';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostElement: string) => void\r\n};\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    // const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if (e.key === 'Enter') {\r\n    //     }\r\n    // };\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx",["184","185"],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx",["186"],"import React from 'react';\r\nimport { PostsType } from '../../../../redux/profile-reducer';\r\nimport s from './Post.module.css';\r\n\r\n\r\nexport const Post = (props: PostsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img  className={s.wrapper} src='https://avatars.mds.yandex.net/get-zen_doc/203431/pub_5c5175b4a1502300ad0f4cb2_5c517c5e463db200ae6546dd/scale_1200'/>\r\n            {props.message}\r\n            <div>\r\n                <span className={s.itemLike}> \r\n                    like\r\n                    { props.likesCount}\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx",["187"],"import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\ntype ActionType = ReturnType<typeof initilazedSuccess> ;\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch(action.type){\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: \r\n         return state\r\n    }\r\n};\r\n\r\n\r\nexport const initilazedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const);\r\n\r\nexport const initializedApp = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initilazedSuccess());\r\n            })\r\n    }\r\n};","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx",["188"],"import React, { ChangeEvent, useState } from \"react\";\r\n\r\n\r\ntype ProfileStatuWithHooksPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nexport const ProfileStatuWithHooks: React.FC<ProfileStatuWithHooksPropsType> = props => {\r\n    const {\r\n        status,\r\n        updateStatus\r\n    } = props;\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newStatus, setStatus] = useState(status);\r\n\r\n    const activeteEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActiveteEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(newStatus);\r\n    };\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span style={{color: 'white'}} onDoubleClick={activeteEditMode} >\r\n                        {status || '1234____1234'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                    onChange={onStatusChange}\r\n                    autoFocus={true} \r\n                    onBlur={deActiveteEditMode} \r\n                    value={newStatus} \r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};",{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"197","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"197","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"198","line":20,"column":7,"nodeType":"195","messageId":"196","endLine":20,"endColumn":30},{"ruleId":"193","severity":1,"message":"197","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"199","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":9},{"ruleId":"193","severity":1,"message":"199","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":9},{"ruleId":"193","severity":1,"message":"199","line":2,"column":8,"nodeType":"195","messageId":"196","endLine":2,"endColumn":9},{"ruleId":"193","severity":1,"message":"200","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":28},{"ruleId":"193","severity":1,"message":"201","line":1,"column":30,"nodeType":"195","messageId":"196","endLine":1,"endColumn":43},{"ruleId":"193","severity":1,"message":"202","line":10,"column":10,"nodeType":"195","messageId":"196","endLine":10,"endColumn":15},{"ruleId":"193","severity":1,"message":"203","line":10,"column":17,"nodeType":"195","messageId":"196","endLine":10,"endColumn":26},{"ruleId":"193","severity":1,"message":"204","line":35,"column":11,"nodeType":"195","messageId":"196","endLine":35,"endColumn":25},{"ruleId":"193","severity":1,"message":"205","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":18,"column":7,"nodeType":"208","endLine":18,"endColumn":89},{"ruleId":"206","severity":1,"message":"207","line":42,"column":29,"nodeType":"208","endLine":42,"endColumn":94},{"ruleId":"206","severity":1,"message":"207","line":6,"column":14,"nodeType":"208","endLine":6,"endColumn":35},{"ruleId":"193","severity":1,"message":"201","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":30},{"ruleId":"193","severity":1,"message":"209","line":27,"column":11,"nodeType":"195","messageId":"196","endLine":27,"endColumn":25},{"ruleId":"193","severity":1,"message":"199","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":9},{"ruleId":"206","severity":1,"message":"207","line":24,"column":17,"nodeType":"208","endLine":24,"endColumn":57},{"ruleId":"206","severity":1,"message":"207","line":9,"column":13,"nodeType":"208","endLine":9,"endColumn":163},{"ruleId":"193","severity":1,"message":"197","line":1,"column":8,"nodeType":"195","messageId":"196","endLine":1,"endColumn":13},{"ruleId":"193","severity":1,"message":"200","line":1,"column":17,"nodeType":"195","messageId":"196","endLine":1,"endColumn":28},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'UPDATE_NEW_MESSAGE_BODY' is assigned a value but never used.","'s' is defined but never used.","'ChangeEvent' is defined but never used.","'KeyboardEvent' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'newMessageBody' is assigned a value but never used.","'logout' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
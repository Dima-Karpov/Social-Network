[{"D:\\My-proect\\social-network\\src\\index.tsx":"1","D:\\My-proect\\social-network\\src\\reportWebVitals.js":"2","D:\\My-proect\\social-network\\src\\App.tsx":"3","D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx":"4","D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx":"5","D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx":"6","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx":"7","D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx":"8","D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx":"9","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx":"10","D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx":"11","D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx":"12","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx":"13","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx":"14","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx":"15","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx":"16","D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx":"17","D:\\My-proect\\social-network\\src\\api\\api.tsx":"18","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx":"19","D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx":"20","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx":"21","D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx":"22","D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts":"23","D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx":"24","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx":"25","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx":"26","D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx":"27","D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx":"28","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx":"29","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx":"30","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx":"31","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx":"33","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx":"34","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts":"35","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx":"36","D:\\My-proect\\social-network\\src\\сomponents\\common\\Paginator\\Paginator.tsx":"37"},{"size":760,"mtime":1627717987216,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1627722497387,"results":"40","hashOfConfig":"39"},{"size":2018,"mtime":1628480209379,"results":"41","hashOfConfig":"39"},{"size":935,"mtime":1628479868227,"results":"42","hashOfConfig":"39"},{"size":2262,"mtime":1630846637792,"results":"43","hashOfConfig":"39"},{"size":1348,"mtime":1627718226174,"results":"44","hashOfConfig":"39"},{"size":3748,"mtime":1630846924234,"results":"45","hashOfConfig":"39"},{"size":5850,"mtime":1629809408368,"results":"46","hashOfConfig":"39"},{"size":1081,"mtime":1627719240614,"results":"47","hashOfConfig":"39"},{"size":2077,"mtime":1628480849568,"results":"48","hashOfConfig":"39"},{"size":738,"mtime":1628477352761,"results":"49","hashOfConfig":"39"},{"size":177,"mtime":1627719324431,"results":"50","hashOfConfig":"39"},{"size":190,"mtime":1627719171195,"results":"51","hashOfConfig":"39"},{"size":196,"mtime":1627719834912,"results":"52","hashOfConfig":"39"},{"size":2210,"mtime":1630845015546,"results":"53","hashOfConfig":"39"},{"size":2458,"mtime":1627998776509,"results":"54","hashOfConfig":"39"},{"size":2869,"mtime":1629809068525,"results":"55","hashOfConfig":"39"},{"size":1497,"mtime":1629799507255,"results":"56","hashOfConfig":"39"},{"size":704,"mtime":1627719585324,"results":"57","hashOfConfig":"39"},{"size":753,"mtime":1627719039660,"results":"58","hashOfConfig":"39"},{"size":958,"mtime":1627718609800,"results":"59","hashOfConfig":"39"},{"size":2428,"mtime":1629809673131,"results":"60","hashOfConfig":"39"},{"size":303,"mtime":1627718552063,"results":"61","hashOfConfig":"39"},{"size":831,"mtime":1627717916982,"results":"62","hashOfConfig":"39"},{"size":199,"mtime":1630432342989,"results":"63","hashOfConfig":"39"},{"size":290,"mtime":1630432325830,"results":"64","hashOfConfig":"39"},{"size":1030,"mtime":1627719967052,"results":"65","hashOfConfig":"39"},{"size":186,"mtime":1627924071497,"results":"66","hashOfConfig":"39"},{"size":1999,"mtime":1629798943351,"results":"67","hashOfConfig":"39"},{"size":1162,"mtime":1629748372607,"results":"68","hashOfConfig":"39"},{"size":975,"mtime":1627719381308,"results":"69","hashOfConfig":"39"},{"size":1662,"mtime":1627719700675,"results":"70","hashOfConfig":"39"},{"size":626,"mtime":1627719515872,"results":"71","hashOfConfig":"39"},{"size":1139,"mtime":1628479861019,"results":"72","hashOfConfig":"39"},{"size":644,"mtime":1628608551372,"results":"73","hashOfConfig":"39"},{"size":1445,"mtime":1629656145248,"results":"74","hashOfConfig":"39"},{"size":1573,"mtime":1629809792159,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"q870p8",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"78"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"78"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\My-proect\\social-network\\src\\index.tsx",[],["169","170"],"D:\\My-proect\\social-network\\src\\reportWebVitals.js",[],["171","172"],"D:\\My-proect\\social-network\\src\\App.tsx",["173"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Music } from './сomponents/Music/Music';\r\nimport { Navbar } from './сomponents/Navbar/Navbar';\r\nimport { News } from './сomponents/News/News';\r\nimport { Settings } from './сomponents/Settings/Settings';\r\nimport { Route } from 'react-router-dom';\r\nimport ProfileContainer from './сomponents/Profile/ProfileContainer';\r\nimport { HeaderContainer } from './сomponents/Header/HeaderContainer';\r\nimport Dialogs from './сomponents/Dialogs/Dialogs';\r\nimport UsersComponent from './сomponents/Users/UsersContainer'\r\nimport Login from './сomponents/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { initializedApp } from './redux/app-reducer';\r\nimport { RootState } from './redux/redux-store';\r\nimport { Preloader } from './сomponents/common/preloader/Preloader';\r\n\r\n\r\ntype AppType = {\r\n  initializedApp: () => void\r\n  initialized: boolean\r\n};\r\n\r\nclass App extends React.Component<AppType> {\r\n  componentDidMount() {\r\n    this.props.initializedApp();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/profile/:userId?'\r\n            render={() =>\r\n              < ProfileContainer />} />\r\n          <Route path='/messages'\r\n            render={() => <Dialogs />} />\r\n          <Route path='/users'\r\n            render={() => <UsersComponent />} />\r\n          <Route path='/login'\r\n            render={() => <Login />} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  initialized: state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps, { initializedApp })(App)\r\n\r\n","D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx",[],"D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx",["174"],"D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx",["175","176"],"import React from 'react';\r\n\r\n\r\nexport type DialogsType = {\r\n  id: number\r\n  name: string\r\n};\r\n\r\nexport type MessagesType = {\r\n  id: number\r\n  message: string\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionType = ReturnType<typeof sendMessageC>\r\n\r\n\r\nconst SEND_MESSAGE = 'SEND-MASSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Yra' },\r\n    { id: 2, name: 'Dima' },\r\n    { id: 3, name: 'Vlad' },\r\n    { id: 4, name: 'Dmitry' },\r\n    { id: 5, name: 'Alex' },\r\n    { id: 6, name: 'Natasha' },\r\n  ] as Array<DialogsType>,\r\n  messages: [\r\n    { id: 1, message: 'HI' },\r\n    { id: 2, message: 'How is your it-kamasutra?' },\r\n    { id: 3, message: 'YO' },\r\n    { id: 4, message: 'YO' },\r\n  ] as Array<MessagesType>,\r\n};\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageC = (newMessageBody: string) => {\r\n  return {\r\n    type: SEND_MESSAGE, \r\n    newMessageBody,\r\n  } as const\r\n};\r\n\r\n\r\nexport default dialogsReducer","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx",["177"],"import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { profileAPI, usersAPI } from '../api/api';\r\nimport { AppStateType } from './redux-store';\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: string\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletPost>\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELET_POST = 'DELET-POST';\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello my friend! Are you in the mood to study React?', likesCount: '12' },\r\n        { id: 2, message: 'We fly', likesCount: '120' },\r\n    ] as Array<PostsType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts:\r\n    {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: { small: string, large: string }\r\n    userId: number\r\n} | null\r\n\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostsType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: '0'\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELET_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText,\r\n    } as const\r\n};\r\nexport const setUsersProfile = (profile: any) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile,\r\n    } as const\r\n};\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status,\r\n    } as const\r\n}\r\nexport const deletPost = (postId: number) => {\r\n    return {\r\n        type: DELET_POST,\r\n        postId,\r\n    } as const\r\n};\r\n\r\n\r\n\r\nexport const getUsersProfile = (userId: number): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUsersProfile(response.data))\r\n\r\n    }\r\n};\r\nexport const getStatus = (userId: number): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n                dispatch(setStatus(response.data))\r\n    }\r\n};\r\nexport const updateStatus = (status: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n};\r\n\r\nexport default profileReducer","D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx",["178"],"import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props: any) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx",["179"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props: any) => {\r\n    return(\r\n        <div>\r\n          Our music is here\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx",["180"],"import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props: any) => {\r\n    return(\r\n        <div>\r\n          Do not even think\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx",["181"],"import React from 'react';\r\nimport { DialogsType, MessagesType, sendMessageC } from '../../redux/dialogs-reduser';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n\r\n};\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    const messagesElement = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    const newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageC(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    wihtAuthRedirect\r\n)(Dialogs)","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx",["182"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType, RootState } from '../../redux/redux-store';\r\nimport { follow, setCarrentPageAC, toggelInProgress, unfollow, UsersType, getUsersThunkCreator } from '../../redux/users-reducer';\r\nimport { UsersFunc } from './Users';\r\nimport { Preloader } from '../common/preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getCarrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from '../../redux/users-selectors';\r\n\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCarrentPage: (carrentPage: number) => void\r\n    toggelInProgress: (isFetching: boolean, userID: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n\r\n};\r\ntype UsersPageMapType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n};\r\n\r\ntype MapStatePropsType = UsersPageMapType\r\n\r\nclass UsersComponent extends React.Component<UsersPageType> {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.carrentPage, this.props.pageSize);\r\n    };\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <UsersFunc\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    carrentPage={this.props.carrentPage}\r\n                    followingInProgress={this.props.followingInProgress}\r\n\r\n                />\r\n            </>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        carrentPage: getCarrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n};\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    (connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCarrentPage: setCarrentPageAC,\r\n        toggelInProgress,\r\n        getUsersThunkCreator,\r\n\r\n    })),\r\n)(UsersComponent)","D:\\My-proect\\social-network\\src\\api\\api.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx",["183","184"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { InitStateType } from '../../redux/auth-reducer';\r\nimport s from './Header.module.css';\r\nimport { logout } from './../../redux/auth-reducer';\r\n\r\n\r\ntype HeaderPropsType = {\r\n  data: InitStateType\r\n  logout: () => void\r\n}\r\n\r\n\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://cdn.dribbble.com/users/1265223/screenshots/5321233/samurai.png'></img>\r\n      <div className={s.loginBlock}>\r\n        {props.data.isAuth\r\n          ? <div>{props.data.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx",["185"],"import React from 'react';\r\nimport { UsersType } from '../../redux/users-reducer';\r\nimport s from './users.module.css'\r\nimport userPhoto from '..//..//assets/images/ava.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paginator } from '../common/Paginator/Paginator';\r\n\r\ntype UsersFyncPropsType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nexport const UsersFunc = (props: UsersFyncPropsType) => {\r\n\r\n    return (\r\n        <>\r\n            <Paginator totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}\r\n                currentPage={props.carrentPage} onPageChanged={props.onPageChanged} />\r\n                \r\n            {props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'./profile/' + u.id}>\r\n                            <img src={u.photos.small || userPhoto} className={s.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed ?\r\n                            <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {\r\n                                    props.unfollow(u.id);\r\n                                }}>Unfollow</button> :\r\n                            <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.status}\r\n                        </div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </>\r\n\r\n    )\r\n}","D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts",[],"D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx",["186"],"import loading from '../../../assets/images/loading.svg'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            {<img src={loading} />}\r\n        </div>\r\n    )\r\n}; ","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx",["187","188"],"import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { AddMyPostFromRedux } from './AddMyPostForm';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostElement: string) => void\r\n};\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo ((props) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    // const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if (e.key === 'Enter') {\r\n    //     }\r\n    // };\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx",["189","190"],"import React from 'react';\r\nimport { ProfileType } from '../../../redux/profile-reducer';\r\nimport { Preloader } from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport { ProfileStatuWithHooks } from './ProfileStatuWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div > */}\r\n            {/* <img src='https://nastol.net/wallpaper/big/58/1181383-pole-trava-zelenyy-priroda-nebo-peyzazhi.jpg' ></img> */}\r\n\r\n            {/* </div> */}\r\n            <div>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatuWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n                {props.profile.fullName} <br />\r\n                {props.profile.aboutMe} <br />\r\n                {props.profile.lookingForAJob}\r\n                {props.profile.lookingForAJobDescription}\r\n            </div>\r\n        </div>\r\n    );\r\n};","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],["191","192"],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx",["193"],"import React from 'react';\r\nimport { PostsType } from '../../../../redux/profile-reducer';\r\nimport s from './Post.module.css';\r\n\r\n\r\nexport const Post = (props: PostsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img  className={s.wrapper} src='https://avatars.mds.yandex.net/get-zen_doc/203431/pub_5c5175b4a1502300ad0f4cb2_5c517c5e463db200ae6546dd/scale_1200'/>\r\n            {props.message}\r\n            <div>\r\n                <span className={s.itemLike}> \r\n                    like\r\n                    { props.likesCount}\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx",["194"],"import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\ntype ActionType = ReturnType<typeof initilazedSuccess> ;\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch(action.type){\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: \r\n         return state\r\n    }\r\n};\r\n\r\n\r\nexport const initilazedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const);\r\n\r\nexport const initializedApp = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initilazedSuccess());\r\n            })\r\n    }\r\n};","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx",["195"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\n\r\n\r\ntype ProfileStatuWithHooksPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nexport const ProfileStatuWithHooks: React.FC<ProfileStatuWithHooksPropsType> = props => {\r\n    const {\r\n        status,\r\n        updateStatus\r\n    } = props;\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newStatus, setStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status]);\r\n\r\n    const activeteEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActiveteEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(newStatus);\r\n    };\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span style={{ color: 'white' }} onDoubleClick={activeteEditMode} >\r\n                        {status || '1234____1234'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deActiveteEditMode}\r\n                        value={newStatus}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};","D:\\My-proect\\social-network\\src\\сomponents\\common\\Paginator\\Paginator.tsx",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"204","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"204","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"205","line":20,"column":7,"nodeType":"202","messageId":"203","endLine":20,"endColumn":30},{"ruleId":"200","severity":1,"message":"204","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"206","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":9},{"ruleId":"200","severity":1,"message":"206","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":9},{"ruleId":"200","severity":1,"message":"206","line":2,"column":8,"nodeType":"202","messageId":"203","endLine":2,"endColumn":9},{"ruleId":"200","severity":1,"message":"207","line":34,"column":11,"nodeType":"202","messageId":"203","endLine":34,"endColumn":25},{"ruleId":"200","severity":1,"message":"208","line":3,"column":10,"nodeType":"202","messageId":"203","endLine":3,"endColumn":22},{"ruleId":"200","severity":1,"message":"209","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":16},{"ruleId":"210","severity":1,"message":"211","line":18,"column":7,"nodeType":"212","endLine":18,"endColumn":89},{"ruleId":"210","severity":1,"message":"211","line":30,"column":29,"nodeType":"212","endLine":30,"endColumn":94},{"ruleId":"210","severity":1,"message":"211","line":6,"column":14,"nodeType":"212","endLine":6,"endColumn":35},{"ruleId":"200","severity":1,"message":"213","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":30},{"ruleId":"200","severity":1,"message":"214","line":27,"column":11,"nodeType":"202","messageId":"203","endLine":27,"endColumn":25},{"ruleId":"200","severity":1,"message":"206","line":4,"column":8,"nodeType":"202","messageId":"203","endLine":4,"endColumn":9},{"ruleId":"210","severity":1,"message":"211","line":24,"column":17,"nodeType":"212","endLine":24,"endColumn":57},{"ruleId":"196","replacedBy":"215"},{"ruleId":"198","replacedBy":"216"},{"ruleId":"210","severity":1,"message":"211","line":9,"column":13,"nodeType":"212","endLine":9,"endColumn":163},{"ruleId":"200","severity":1,"message":"204","line":1,"column":8,"nodeType":"202","messageId":"203","endLine":1,"endColumn":13},{"ruleId":"200","severity":1,"message":"217","line":1,"column":17,"nodeType":"202","messageId":"203","endLine":1,"endColumn":28},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'UPDATE_NEW_MESSAGE_BODY' is assigned a value but never used.","'s' is defined but never used.","'newMessageBody' is assigned a value but never used.","'AppStateType' is defined but never used.","'logout' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KeyboardEvent' is defined but never used.","'newPostElement' is assigned a value but never used.",["218"],["219"],"'ChangeEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]
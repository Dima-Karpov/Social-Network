[{"D:\\My-proect\\social-network\\src\\index.tsx":"1","D:\\My-proect\\social-network\\src\\reportWebVitals.js":"2","D:\\My-proect\\social-network\\src\\App.tsx":"3","D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx":"4","D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx":"5","D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx":"6","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx":"7","D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx":"8","D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx":"9","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx":"10","D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx":"11","D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx":"12","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx":"13","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx":"14","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx":"15","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx":"16","D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx":"17","D:\\My-proect\\social-network\\src\\api\\api.tsx":"18","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx":"19","D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx":"20","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx":"21","D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx":"22","D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts":"23","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx":"24","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx":"25","D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx":"26","D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx":"27","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx":"28","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx":"29","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx":"30","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx":"31","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx":"32","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx":"33","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts":"34","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx":"35","D:\\My-proect\\social-network\\src\\сomponents\\common\\Paginator\\Paginator.tsx":"36","D:\\My-proect\\social-network\\src\\utils\\helpers\\object-helpers.ts":"37","D:\\My-proect\\social-network\\src\\сomponents\\Users\\User.tsx":"38","D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx":"39"},{"size":536,"mtime":1631953439151,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1627722497387,"results":"42","hashOfConfig":"41"},{"size":2394,"mtime":1633021531252,"results":"43","hashOfConfig":"41"},{"size":928,"mtime":1630847029415,"results":"44","hashOfConfig":"41"},{"size":2262,"mtime":1630846637792,"results":"45","hashOfConfig":"41"},{"size":1348,"mtime":1627718226174,"results":"46","hashOfConfig":"41"},{"size":3740,"mtime":1630847008642,"results":"47","hashOfConfig":"41"},{"size":5255,"mtime":1632156503715,"results":"48","hashOfConfig":"41"},{"size":1081,"mtime":1627719240614,"results":"49","hashOfConfig":"41"},{"size":2077,"mtime":1632504080256,"results":"50","hashOfConfig":"41"},{"size":738,"mtime":1628477352761,"results":"51","hashOfConfig":"41"},{"size":177,"mtime":1627719324431,"results":"52","hashOfConfig":"41"},{"size":190,"mtime":1627719171195,"results":"53","hashOfConfig":"41"},{"size":196,"mtime":1627719834912,"results":"54","hashOfConfig":"41"},{"size":2210,"mtime":1630845015546,"results":"55","hashOfConfig":"41"},{"size":2157,"mtime":1630853304107,"results":"56","hashOfConfig":"41"},{"size":2952,"mtime":1630857721095,"results":"57","hashOfConfig":"41"},{"size":1497,"mtime":1629799507255,"results":"58","hashOfConfig":"41"},{"size":704,"mtime":1627719585324,"results":"59","hashOfConfig":"41"},{"size":753,"mtime":1627719039660,"results":"60","hashOfConfig":"41"},{"size":958,"mtime":1627718609800,"results":"61","hashOfConfig":"41"},{"size":1280,"mtime":1630856449170,"results":"62","hashOfConfig":"41"},{"size":303,"mtime":1627718552063,"results":"63","hashOfConfig":"41"},{"size":199,"mtime":1630432342989,"results":"64","hashOfConfig":"41"},{"size":290,"mtime":1630432325830,"results":"65","hashOfConfig":"41"},{"size":1452,"mtime":1630853453411,"results":"66","hashOfConfig":"41"},{"size":186,"mtime":1627924071497,"results":"67","hashOfConfig":"41"},{"size":1999,"mtime":1629798943351,"results":"68","hashOfConfig":"41"},{"size":1162,"mtime":1629748372607,"results":"69","hashOfConfig":"41"},{"size":975,"mtime":1627719381308,"results":"70","hashOfConfig":"41"},{"size":1662,"mtime":1627719700675,"results":"71","hashOfConfig":"41"},{"size":626,"mtime":1627719515872,"results":"72","hashOfConfig":"41"},{"size":1139,"mtime":1628479861019,"results":"73","hashOfConfig":"41"},{"size":644,"mtime":1628608551372,"results":"74","hashOfConfig":"41"},{"size":1445,"mtime":1629656145248,"results":"75","hashOfConfig":"41"},{"size":1647,"mtime":1630854660483,"results":"76","hashOfConfig":"41"},{"size":317,"mtime":1630850073711,"results":"77","hashOfConfig":"41"},{"size":1821,"mtime":1630855742026,"results":"78","hashOfConfig":"41"},{"size":824,"mtime":1632504077817,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"q870p8",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\My-proect\\social-network\\src\\index.tsx",[],["177","178"],"D:\\My-proect\\social-network\\src\\reportWebVitals.js",[],["179","180"],"D:\\My-proect\\social-network\\src\\App.tsx",[],"D:\\My-proect\\social-network\\src\\redux\\redux-store.tsx",[],"D:\\My-proect\\social-network\\src\\redux\\auth-reducer.tsx",["181"],"import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { authAPI } from '../api/api';\r\nimport { AppStateType } from './redux-store';\r\nimport { stopSubmit } from 'redux-form'\r\n\r\n\r\ntype ActionType = ReturnType<typeof setAuthUserData>\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET-USER-DATA';\r\n\r\nexport type InitStateType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean,\r\n};\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n\r\n};\r\n\r\nconst authReducer = (state: InitStateType = initialState, action: ActionType): InitStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: { id, email, login, isAuth }\r\n    } as const\r\n};\r\n\r\nexport const getAuthUserData = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: Dispatch<any>) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Incorrectly entered email or passwordr';\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch: Dispatch<any>) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default authReducer","D:\\My-proect\\social-network\\src\\redux\\dialogs-reduser.tsx",["182","183"],"import React from 'react';\r\n\r\n\r\nexport type DialogsType = {\r\n  id: number\r\n  name: string\r\n};\r\n\r\nexport type MessagesType = {\r\n  id: number\r\n  message: string\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionType = ReturnType<typeof sendMessageC>\r\n\r\n\r\nconst SEND_MESSAGE = 'SEND-MASSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Yra' },\r\n    { id: 2, name: 'Dima' },\r\n    { id: 3, name: 'Vlad' },\r\n    { id: 4, name: 'Dmitry' },\r\n    { id: 5, name: 'Alex' },\r\n    { id: 6, name: 'Natasha' },\r\n  ] as Array<DialogsType>,\r\n  messages: [\r\n    { id: 1, message: 'HI' },\r\n    { id: 2, message: 'How is your it-kamasutra?' },\r\n    { id: 3, message: 'YO' },\r\n    { id: 4, message: 'YO' },\r\n  ] as Array<MessagesType>,\r\n};\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      const body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 6, message: body }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageC = (newMessageBody: string) => {\r\n  return {\r\n    type: SEND_MESSAGE, \r\n    newMessageBody,\r\n  } as const\r\n};\r\n\r\n\r\nexport default dialogsReducer","D:\\My-proect\\social-network\\src\\redux\\profile-reducer.tsx",["184"],"import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { profileAPI, usersAPI } from '../api/api';\r\nimport { AppStateType } from './redux-store';\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: string\r\n};\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionType = ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUsersProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletPost>\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELET_POST = 'DELET-POST';\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello my friend! Are you in the mood to study React?', likesCount: '12' },\r\n        { id: 2, message: 'We fly', likesCount: '120' },\r\n    ] as Array<PostsType>,\r\n    newPostText: '',\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts:\r\n    {\r\n        github: string\r\n        vk: string\r\n        facebook: string\r\n        instagram: string\r\n        twitter: string\r\n        website: string\r\n        youtube: string\r\n        mainLink: string\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: { small: string, large: string }\r\n    userId: number\r\n} | null\r\n\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost: PostsType = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: '0'\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELET_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText,\r\n    } as const\r\n};\r\nexport const setUsersProfile = (profile: any) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile,\r\n    } as const\r\n};\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status,\r\n    } as const\r\n}\r\nexport const deletPost = (postId: number) => {\r\n    return {\r\n        type: DELET_POST,\r\n        postId,\r\n    } as const\r\n};\r\n\r\n\r\n\r\nexport const getUsersProfile = (userId: number): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUsersProfile(response.data))\r\n\r\n    }\r\n};\r\nexport const getStatus = (userId: number): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data))\r\n    }\r\n};\r\nexport const updateStatus = (status: string): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n};\r\n\r\nexport default profileReducer","D:\\My-proect\\social-network\\src\\redux\\users-reducer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Navbar\\Navbar.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\HeaderContainer.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\News\\News.tsx",["185"],"import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nexport const News = (props: any) => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Music\\Music.tsx",["186"],"import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nexport const Music = (props: any) => {\r\n    return(\r\n        <div>\r\n          Our music is here\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Settings\\Settings.tsx",["187"],"import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nexport const Settings = (props: any) => {\r\n    return(\r\n        <div>\r\n          Do not even think\r\n        </div>\r\n    );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Dialogs.tsx",["188"],"import React from 'react';\r\nimport { DialogsType, MessagesType, sendMessageC } from '../../redux/dialogs-reduser';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n\r\n};\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    const messagesElement = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    const newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageC(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    wihtAuthRedirect\r\n)(Dialogs)","D:\\My-proect\\social-network\\src\\сomponents\\Login\\Login.tsx",["189"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { RootState } from '../../redux/redux-store';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport s from '../../сomponents/common/FormsControls/FromControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n};\r\n\r\ntype LoginPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n};\r\n\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        login,\r\n        isAuth,\r\n    } = props;\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN...</h1>\r\n            <LoginReduxForn onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = React.memo((props) => {\r\n\r\n    const {\r\n        handleSubmit,\r\n        error\r\n    } = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n            {createField('', 'rememberMe', [], Input, { type: 'checkbox' }, 'remember me')}\r\n            <div>\r\n                {error && <div className={s.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div>\r\n\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n})\r\n\r\n\r\nconst LoginReduxForn = reduxForm<FormDataType>({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login)","D:\\My-proect\\social-network\\src\\сomponents\\Users\\UsersContainer.tsx",[],"D:\\My-proect\\social-network\\src\\api\\api.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\Profile.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Header\\Header.tsx",["190","191"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { InitStateType } from '../../redux/auth-reducer';\r\nimport s from './Header.module.css';\r\nimport { logout } from './../../redux/auth-reducer';\r\n\r\n\r\ntype HeaderPropsType = {\r\n  data: InitStateType\r\n  logout: () => void\r\n}\r\n\r\n\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://cdn.dribbble.com/users/1265223/screenshots/5321233/samurai.png'></img>\r\n      <div className={s.loginBlock}>\r\n        {props.data.isAuth\r\n          ? <div>{props.data.login} - <button onClick={props.logout}>Log out</button></div>\r\n          : <NavLink to={'/login'}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n} ","D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\AddMessageForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\Users.tsx",[],"D:\\My-proect\\social-network\\src\\utils\\validators\\validators.ts",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\Message\\Message.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Dialogs\\DialogItem\\DialogItem.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\FormsControls\\FormsControls.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\common\\preloader\\Preloader.tsx",["192"],"import loading from '../../../assets/images/loading.svg'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            {<img src={loading} />}\r\n        </div>\r\n    )\r\n}; ","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\MyPosts.tsx",["193","194"],"import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { AddMyPostFromRedux } from './AddMyPostForm';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostElement: string) => void\r\n};\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts: React.FC<MyPostsPropsType> = React.memo ((props) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    // const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if (e.key === 'Enter') {\r\n    //     }\r\n    // };\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileInfo.tsx",["195","196"],"import React from 'react';\r\nimport { ProfileType } from '../../../redux/profile-reducer';\r\nimport { Preloader } from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport { ProfileStatuWithHooks } from './ProfileStatuWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <div > */}\r\n            {/* <img src='https://nastol.net/wallpaper/big/58/1181383-pole-trava-zelenyy-priroda-nebo-peyzazhi.jpg' ></img> */}\r\n\r\n            {/* </div> */}\r\n            <div>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatuWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n                {props.profile.fullName} <br />\r\n                {props.profile.aboutMe} <br />\r\n                {props.profile.lookingForAJob}\r\n                {props.profile.lookingForAJobDescription}\r\n            </div>\r\n        </div>\r\n    );\r\n};","D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\AddMyPostForm.tsx",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],["197","198"],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\MyPosts\\Post\\Post.tsx",["199"],"import React from 'react';\r\nimport { PostsType } from '../../../../redux/profile-reducer';\r\nimport s from './Post.module.css';\r\n\r\n\r\nexport const Post = (props: PostsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img  className={s.wrapper} src='https://avatars.mds.yandex.net/get-zen_doc/203431/pub_5c5175b4a1502300ad0f4cb2_5c517c5e463db200ae6546dd/scale_1200'/>\r\n            {props.message}\r\n            <div>\r\n                <span className={s.itemLike}> \r\n                    like\r\n                    { props.likesCount}\r\n                    </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\My-proect\\social-network\\src\\redux\\app-reducer.tsx",["200"],"import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { getAuthUserData } from './auth-reducer';\r\nimport { AppStateType } from './redux-store';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\ntype ActionType = ReturnType<typeof initilazedSuccess> ;\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch(action.type){\r\n        case INITIALIZED_SUCCESS :\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: \r\n         return state\r\n    }\r\n};\r\n\r\n\r\nexport const initilazedSuccess = () => ({ type: INITIALIZED_SUCCESS } as const);\r\n\r\nexport const initializedApp = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initilazedSuccess());\r\n            })\r\n    }\r\n};","D:\\My-proect\\social-network\\src\\redux\\users-selectors.ts",[],"D:\\My-proect\\social-network\\src\\сomponents\\Profile\\ProfileInfo\\ProfileStatuWithHooks.tsx",["201"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\n\r\n\r\ntype ProfileStatuWithHooksPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n};\r\n\r\nexport const ProfileStatuWithHooks: React.FC<ProfileStatuWithHooksPropsType> = props => {\r\n    const {\r\n        status,\r\n        updateStatus\r\n    } = props;\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [newStatus, setStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setStatus(status)\r\n    }, [status]);\r\n\r\n    const activeteEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deActiveteEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(newStatus);\r\n    };\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span style={{ color: 'white' }} onDoubleClick={activeteEditMode} >\r\n                        {status || '1234____1234'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deActiveteEditMode}\r\n                        value={newStatus}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};","D:\\My-proect\\social-network\\src\\сomponents\\common\\Paginator\\Paginator.tsx",[],"D:\\My-proect\\social-network\\src\\utils\\helpers\\object-helpers.ts",[],"D:\\My-proect\\social-network\\src\\сomponents\\Users\\User.tsx",["202"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UsersType } from '../../redux/users-reducer';\r\nimport userPhoto from '../../assets/images/ava.png';\r\nimport s from './users.module.css'\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    unfollow:  (usersID: number) => void\r\n    follow: (usersID: number) => void\r\n}\r\n\r\n\r\nexport const User: React.FC<UserPropsType> = React.memo((props) => {\r\n\r\n    const {\r\n        user,\r\n        followingInProgress,\r\n        unfollow,\r\n        follow\r\n    } = props;\r\n\r\n    return (\r\n        <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'./profile/' + user.id}>\r\n                    <img src={user.photos.small || userPhoto} className={s.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed ?\r\n                    <button\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            unfollow(user.id);\r\n                        }}>Unfollow</button> :\r\n                    <button\r\n                        disabled={followingInProgress.some(id => id === user.id)}\r\n                        onClick={() => {\r\n                            follow(user.id);\r\n                        }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n\r\n        <span>\r\n            <span>\r\n                <div>\r\n                    {user.name}\r\n                </div>\r\n                <div>\r\n                    {user.status}\r\n                </div>\r\n            </span>\r\n\r\n            <span>\r\n                <div>{'u.location.country'}</div>\r\n                <div>{'u.location.city'}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n    )\r\n});","D:\\My-proect\\social-network\\src\\hoc\\wihtAuthRedirect.tsx",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"208","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"211","line":20,"column":7,"nodeType":"209","messageId":"210","endLine":20,"endColumn":30},{"ruleId":"207","severity":1,"message":"208","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"212","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":9},{"ruleId":"207","severity":1,"message":"212","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":9},{"ruleId":"207","severity":1,"message":"212","line":2,"column":8,"nodeType":"209","messageId":"210","endLine":2,"endColumn":9},{"ruleId":"207","severity":1,"message":"213","line":34,"column":11,"nodeType":"209","messageId":"210","endLine":34,"endColumn":25},{"ruleId":"207","severity":1,"message":"214","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":15},{"ruleId":"207","severity":1,"message":"215","line":5,"column":10,"nodeType":"209","messageId":"210","endLine":5,"endColumn":16},{"ruleId":"216","severity":1,"message":"217","line":18,"column":7,"nodeType":"218","endLine":18,"endColumn":89},{"ruleId":"216","severity":1,"message":"217","line":6,"column":14,"nodeType":"218","endLine":6,"endColumn":35},{"ruleId":"207","severity":1,"message":"219","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":30},{"ruleId":"207","severity":1,"message":"220","line":27,"column":11,"nodeType":"209","messageId":"210","endLine":27,"endColumn":25},{"ruleId":"207","severity":1,"message":"212","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":9},{"ruleId":"216","severity":1,"message":"217","line":24,"column":17,"nodeType":"218","endLine":24,"endColumn":57},{"ruleId":"203","replacedBy":"221"},{"ruleId":"205","replacedBy":"222"},{"ruleId":"216","severity":1,"message":"217","line":9,"column":13,"nodeType":"218","endLine":9,"endColumn":163},{"ruleId":"207","severity":1,"message":"208","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"223","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":29,"column":21,"nodeType":"218","endLine":29,"endColumn":89},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'UPDATE_NEW_MESSAGE_BODY' is assigned a value but never used.","'s' is defined but never used.","'newMessageBody' is assigned a value but never used.","'Field' is defined but never used.","'logout' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'KeyboardEvent' is defined but never used.","'newPostElement' is assigned a value but never used.",["224"],["225"],"'ChangeEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]
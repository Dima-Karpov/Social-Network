{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setCarrentPageAC, setTotalUserCountAC, setUserAC, unfollowAC } from '../../redux/users-reducer';\nimport axios from 'axios';\nimport { UsersFunc } from './Users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCarrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${this.props.carrentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUserCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(UsersFunc, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      carrentPage: this.props.carrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    carrentPage: state.usersPage.carrentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: usersID => {\n      dispatch(followAC(usersID));\n    },\n    unfollow: usersID => {\n      dispatch(unfollowAC(usersID));\n    },\n    setUsers: users => {\n      dispatch(setUserAC(users));\n    },\n    setCarrentPage: pageNumber => {\n      dispatch(setCarrentPageAC(pageNumber));\n    },\n    setTotalUserCount: totalCount => {\n      dispatch(setTotalUserCountAC(totalCount));\n    }\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersComponent);","map":{"version":3,"sources":["D:/My-proect/social-network/src/—Åomponents/Users/UsersContainer.tsx"],"names":["React","connect","followAC","setCarrentPageAC","setTotalUserCountAC","setUserAC","unfollowAC","axios","UsersFunc","UsersComponent","Component","onPageChanged","pageNumber","props","setCarrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","carrentPage","setTotalUserCount","totalCount","render","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","usersID","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { followAC, setCarrentPageAC, setTotalUserCountAC, setUserAC, unfollowAC, UsersType } from '../../redux/users-reducer';\r\nimport axios from 'axios';\r\nimport { UsersFunc } from './Users';\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCarrentPage: (carrentPage: number) => void\r\n    setTotalUserCount: (totalCount: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n}\r\ntype UsersPageMapType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    carrentPage: number\r\n};\r\n\r\ntype MapStatePropsType = UsersPageMapType\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCarrentPage: (pageNumber: number) => void\r\n    setTotalUserCount: (totalCount: number) => void\r\n\r\n}\r\nclass UsersComponent extends React.Component<UsersPageType> {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${this.props.carrentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUserCount(response.data.totalCount)\r\n\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCarrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n    render() {\r\n\r\n        return <UsersFunc\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n            carrentPage={this.props.carrentPage}\r\n\r\n        />\r\n\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        carrentPage: state.usersPage.carrentPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        follow: (usersID: number) => {\r\n            dispatch(followAC(usersID))\r\n        },\r\n        unfollow: (usersID: number) => {\r\n            dispatch(unfollowAC(usersID))\r\n        },\r\n        setUsers: (users: Array<UsersType>) => {\r\n            dispatch(setUserAC(users))\r\n        },\r\n        setCarrentPage: (pageNumber: number) => {\r\n            dispatch(setCarrentPageAC(pageNumber))\r\n        },\r\n        setTotalUserCount: (totalCount) => {\r\n            dispatch(setTotalUserCountAC(totalCount))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersComponent)"]},"metadata":{},"sourceType":"module"}
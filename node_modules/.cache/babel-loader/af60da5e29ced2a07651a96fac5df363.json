{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{Field,reduxForm}from'redux-form';import{login}from'../../redux/auth-reducer';import{required}from'../../utils/validators/validators';import{Input}from'../common/FormsControls/FormsControls';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:'/profile'});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LOGIN...\"}),/*#__PURE__*/_jsx(LoginReduxForn,{onSubmit:onSubmit})]});};var LoginForm=function LoginForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Email',name:'email',component:Input,validate:[required]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:'Password',name:'password',component:Input,validate:[required],type:'password'})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{type:'checkbox',name:'rememberMe',component:Input}),\" remember me\"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]});};var LoginReduxForn=reduxForm({form:'login'})(LoginForm);var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["D:/My-proect/social-network/src/сomponents/Login/Login.tsx"],"names":["React","connect","Redirect","Field","reduxForm","login","required","Input","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","LoginForm","handleSubmit","LoginReduxForn","form","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,KAAT,CAAmCC,SAAnC,KAAoD,YAApD,CACA,OAASC,KAAT,KAAsB,0BAAtB,CAEA,OAASC,QAAT,KAAyB,mCAAzB,CACA,OAASC,KAAT,KAAsB,uCAAtB,C,wFAcC,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAA2B,CAEtC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAA4B,CACzCF,KAAK,CAACJ,KAAN,CAAYM,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,EAED,mBACI,oCACI,gCADJ,cAEI,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFJ,GADJ,CAMH,CAfA,CAmBD,GAAMM,CAAAA,SAAoD,CAAG,QAAvDA,CAAAA,SAAuD,CAACP,KAAD,CAAW,CAEpE,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACQ,YAAtB,wBACI,kCACI,KAAC,KAAD,EACI,WAAW,CAAE,OADjB,CAEI,IAAI,CAAE,OAFV,CAGI,SAAS,CAAEV,KAHf,CAII,QAAQ,CAAE,CAACD,QAAD,CAJd,EADJ,EADJ,cASI,kCACI,KAAC,KAAD,EACI,WAAW,CAAE,UADjB,CAEI,IAAI,CAAE,UAFV,CAGI,SAAS,CAAEC,KAHf,CAII,QAAQ,CAAE,CAACD,QAAD,CAJd,CAKI,IAAI,CAAE,UALV,EADJ,EATJ,cAkBI,oCACI,KAAC,KAAD,EAAO,IAAI,CAAE,UAAb,CAAyB,IAAI,CAAE,YAA/B,CAA6C,SAAS,CAAEC,KAAxD,EADJ,kBAlBJ,cAqBI,kCACI,iCADJ,EArBJ,GADJ,CA2BH,CA7BD,CAgCA,GAAMW,CAAAA,cAAc,CAAGd,SAAS,CAAe,CAC3Ce,IAAI,CAAE,OADqC,CAAf,CAAT,CAEpBH,SAFoB,CAAvB,CAIA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAsB,CAC3C,MAAO,CACHN,MAAM,CAAEM,KAAK,CAACC,IAAN,CAAWP,MADhB,CAAP,CAGF,CAJD,CAMA,cAAed,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAACf,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCG,KAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { AppStateType, RootState } from '../../redux/redux-store';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\n const Login = (props: LoginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe )\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN...</h1>\r\n            <LoginReduxForn onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Email'}\r\n                    name={'email'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                    type={'password'}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field type={'checkbox'} name={'rememberMe'} component={Input} /> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForn = reduxForm<FormDataType>({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n   return {\r\n       isAuth: state.auth.isAuth\r\n   } \r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"]},"metadata":{},"sourceType":"module"}
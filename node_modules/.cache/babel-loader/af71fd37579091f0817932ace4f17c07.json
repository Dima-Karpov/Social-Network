{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\hoc\\\\wihtAuthRedirect.tsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport function wihtAuthRedirect(Component) {\n  const RedirectComponent = props => {\n    let {\n      isAuth,\n      ...restProps\n    } = props;\n    if (!isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Component, { ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  };\n\n  let ConnectedAuthResirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthResirectComponent;\n}\n;","map":{"version":3,"sources":["D:/My-proect/social-network/src/hoc/wihtAuthRedirect.tsx"],"names":["React","connect","Redirect","mapStateToPropsForRedirect","state","isAuth","auth","wihtAuthRedirect","Component","RedirectComponent","props","restProps","ConnectedAuthResirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAMA,IAAIC,0BAA0B,GAAIC,KAAD,IAA4C;AACzE,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADhB,GAAP;AAGH,CAJD;;AAMA,OAAO,SAASE,gBAAT,CAA6BC,SAA7B,EAA0D;AAC7D,QAAMC,iBAAiB,GAAIC,KAAD,IAA8B;AACpD,QAAI;AAAEL,MAAAA,MAAF;AAAU,SAAGM;AAAb,QAA2BD,KAA/B;AAEA,QAAI,CAACL,MAAL,EAAa,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAEb,wBAAO,QAAC,SAAD,OAAgBM;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAND;;AASA,MAAIC,8BAA8B,GAAGX,OAAO,CAACE,0BAAD,CAAP,CAAoCM,iBAApC,CAArC;AAEA,SAAOG,8BAAP;AACH;AAAA","sourcesContent":["import React, { ComponentType } from \"react\"\r\nimport { AppStateType } from \"../redux/redux-store\"\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport function wihtAuthRedirect<T>(Component: ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let { isAuth, ...restProps } = props;\r\n\r\n        if (!isAuth) return <Redirect to={'/login/'}/>\r\n\r\n        return <Component { ...restProps as T } /> \r\n    }\r\n\r\n\r\n    let ConnectedAuthResirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthResirectComponent\r\n};"]},"metadata":{},"sourceType":"module"}
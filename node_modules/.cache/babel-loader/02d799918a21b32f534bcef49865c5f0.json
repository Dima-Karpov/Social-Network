{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from 'react';\nimport { addPostAC, changeNewTextAC } from '../../../redux/profile-reducer';\nimport s from './MyPosts.module.css';\nimport { Post } from './Post/Post';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  const postsElement = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    id: p.id,\n    message: p.message,\n    likesCount: p.likesCount\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 47\n  }, this));\n  const newPostElement = /*#__PURE__*/React.createRef(); // ссылка на HTML элемент \n\n  const onAddPost = newPostElement => {\n    props.addPost(newPostElement);\n  };\n\n  const onPropsChange = () => {\n    var _newPostElement$curre;\n\n    const text = newPostElement === null || newPostElement === void 0 ? void 0 : (_newPostElement$curre = newPostElement.current) === null || _newPostElement$curre === void 0 ? void 0 : _newPostElement$curre.value;\n    props.updateNewPostText(text || '');\n  };\n\n  const onKeyPressSendPost = e => {\n    if (e.key === 'Enter') {}\n  };\n\n  const addNewMyPost = values => {\n    props.addPost(values.newPostElement);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddMyPostFromRedux, {\n      onSubmit: addNewMyPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => {\n      let action = changeNewTextAC(text);\n      dispatch(action);\n    },\n    addPost: newPostElement => {\n      dispatch(addPostAC(newPostElement));\n    }\n  };\n};\n\nconst AddMyPostForm = porps => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: porps.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newPostElement\",\n        placeholder: \"Enter your post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = AddMyPostForm;\nconst AddMyPostFromRedux = reduxForm({\n  form: 'profileMyPostForm'\n})(AddMyPostForm);\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPosts\");\n$RefreshReg$(_c2, \"AddMyPostForm\");","map":{"version":3,"sources":["D:/My-proect/social-network/src/сomponents/Profile/MyPosts/MyPosts.tsx"],"names":["React","addPostAC","changeNewTextAC","s","Post","connect","Field","reduxForm","MyPosts","props","postsElement","posts","map","p","id","message","likesCount","newPostElement","createRef","onAddPost","addPost","onPropsChange","text","current","value","updateNewPostText","onKeyPressSendPost","e","key","addNewMyPost","values","postsBlock","mapStateToProps","state","profilePage","newPostText","mapDispatchToProps","dispatch","action","AddMyPostForm","porps","handleSubmit","AddMyPostFromRedux","form","MyPostsContainer"],"mappings":"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","sourcesContent":["import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, changeNewTextAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    updateNewPostText: (text: string) => void\r\n    addPost: (newPostElement: string) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    \r\n\r\n    const onAddPost = (newPostElement: string)  => {\r\n        props.addPost(newPostElement)\r\n    };\r\n\r\n    const onPropsChange = () => {\r\n        const text = newPostElement?.current?.value\r\n        props.updateNewPostText(text || '')\r\n    };\r\n\r\n    const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === 'Enter') {\r\n        }\r\n    }\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostElement)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        updateNewPostText: (text: string) => {\r\n            let action = changeNewTextAC(text)\r\n            dispatch(action)\r\n        },\r\n        addPost: (newPostElement: string) => {\r\n            dispatch(addPostAC(newPostElement));\r\n        }\r\n    }\r\n}\r\n\r\ntype AddMyPostFromPropsType = {\r\n    handleSubmit: any\r\n}\r\n\r\nconst AddMyPostForm = (porps: AddMyPostFromPropsType) => {\r\n    return (\r\n        <form onSubmit={porps.handleSubmit}>\r\n                <div>\r\n                    <Field component='textarea' name='newPostElement' placeholder='Enter your post'/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n    )\r\n};\r\n\r\nconst AddMyPostFromRedux = reduxForm({form: 'profileMyPostForm'})(AddMyPostForm)\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)"]},"metadata":{},"sourceType":"module"}
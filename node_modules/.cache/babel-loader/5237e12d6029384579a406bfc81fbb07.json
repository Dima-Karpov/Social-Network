{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from 'react';\nimport { addPostAC } from '../../../redux/profile-reducer';\nimport s from './MyPosts.module.css';\nimport { Post } from './Post/Post';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyPosts = props => {\n  const postsElement = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    id: p.id,\n    message: p.message,\n    likesCount: p.likesCount\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 47\n  }, this));\n  const newPostElement = /*#__PURE__*/React.createRef(); // ссылка на HTML элемент \n\n  const onKeyPressSendPost = e => {\n    if (e.key === 'Enter') {}\n  };\n\n  const addNewMyPost = values => {\n    props.addPost(values.newPostText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddMyPostFromRedux, {\n      onSubmit: addNewMyPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: newPostText => {\n      dispatch(addPostAC(newPostText));\n    }\n  };\n};\n\nconst AddMyPostForm = porps => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: porps.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newPostText\",\n        placeholder: \"Enter your post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = AddMyPostForm;\nconst AddMyPostFromRedux = reduxForm({\n  form: 'profileMyPostForm'\n})(AddMyPostForm);\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPosts\");\n$RefreshReg$(_c2, \"AddMyPostForm\");","map":{"version":3,"sources":["D:/My-proect/social-network/src/сomponents/Profile/MyPosts/MyPosts.tsx"],"names":["React","addPostAC","s","Post","connect","Field","reduxForm","MyPosts","props","postsElement","posts","map","p","id","message","likesCount","newPostElement","createRef","onKeyPressSendPost","e","key","addNewMyPost","values","addPost","newPostText","postsBlock","mapStateToProps","state","profilePage","mapDispatchToProps","dispatch","AddMyPostForm","porps","handleSubmit","AddMyPostFromRedux","form","MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,SAAT,QAAqC,gCAArC;AAEA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAmCC,SAAnC,QAAoD,YAApD;;AAeA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAEhD,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAZ;AAAgB,IAAA,OAAO,EAAED,CAAC,CAACE,OAA3B;AAAoC,IAAA,UAAU,EAAEF,CAAC,CAACG;AAAlD,KAAmEH,CAAC,CAACC,EAArE;AAAA;AAAA;AAAA;AAAA,UAArB,CAArB;AAEA,QAAMG,cAAc,gBAAGhB,KAAK,CAACiB,SAAN,EAAvB,CAJgD,CAIe;;AAE/D,QAAMC,kBAAkB,GAAIC,CAAD,IAA2C;AAClE,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB,CACtB;AACJ,GAHD;;AAKA,QAAMC,YAAY,GAAIC,MAAD,IAAiB;AAClCd,IAAAA,KAAK,CAACe,OAAN,CAAcD,MAAM,CAACE,WAArB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEtB,CAAC,CAACuB,UAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEY,QAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEJ;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFZ,eAGI;AAAK,MAAA,SAAS,EAAEnB,CAAC,CAACQ,KAAlB;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxBM;KAAMF,O;;AA0Bb,MAAMmB,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACHjB,IAAAA,KAAK,EAAEiB,KAAK,CAACC,WAAN,CAAkBlB,KADtB;AAEHc,IAAAA,WAAW,EAAEG,KAAK,CAACC,WAAN,CAAkBJ;AAF5B,GAAP;AAIH,CALD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAA8C;AACrE,SAAO;AACHP,IAAAA,OAAO,EAAGC,WAAD,IAAyB;AAC9BM,MAAAA,QAAQ,CAAC7B,SAAS,CAACuB,WAAD,CAAV,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAYA,MAAMO,aAAwD,GAAIC,KAAD,IAAW;AACxE,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACQ;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC,aAAjC;AAA+C,QAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;MAAMF,a;AAaN,MAAMG,kBAAkB,GAAG5B,SAAS,CAAe;AAAC6B,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAqDJ,aAArD,CAA3B;AAGA,OAAO,MAAMK,gBAAgB,GAAGhC,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,OAA7C,CAAzB","sourcesContent":["import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostElement: string) => void\r\n};\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === 'Enter') {\r\n        }\r\n    };\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\ntype FormDataType = {\r\n    newPostText: stri\r\n};\r\n\r\nconst AddMyPostForm: React.FC<InjectedFormProps<FormDataType>> = (porps) => {\r\n    return (\r\n        <form onSubmit={porps.handleSubmit}>\r\n                <div>\r\n                    <Field component='textarea' name='newPostText' placeholder='Enter your post'/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n    )\r\n};\r\n\r\nconst AddMyPostFromRedux = reduxForm<FormDataType>({form: 'profileMyPostForm'})(AddMyPostForm);\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setCarrentPageAC, setTotalUserCountAC, setUserAC, toggelIsFetchingAC, unfollowAC } from '../../redux/users-reducer';\nimport axios from 'axios';\nimport { UsersFunc } from './Users';\nimport { Preloader } from '../common/preloader/Preloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggeleIsFetching(true);\n      this.props.setCarrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggeleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggeleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${this.props.carrentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggeleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUserCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 41\n      }, this) : null, /*#__PURE__*/_jsxDEV(UsersFunc, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        carrentPage: this.props.carrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    carrentPage: state.usersPage.carrentPage,\n    isFetching: state.usersPage.isFeching\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, {\n  follow: followAC,\n  unfollow: unfollowAC,\n  setUsers: setUserAC,\n  setCarrentPage: setCarrentPageAC,\n  setTotalUserCount: setTotalUserCountAC,\n  toggeleIsFetching: toggelIsFetchingAC\n})(UsersComponent);","map":{"version":3,"sources":["D:/My-proect/social-network/src/—Åomponents/Users/UsersContainer.tsx"],"names":["React","connect","followAC","setCarrentPageAC","setTotalUserCountAC","setUserAC","toggelIsFetchingAC","unfollowAC","axios","UsersFunc","Preloader","UsersComponent","Component","onPageChanged","pageNumber","props","toggeleIsFetching","setCarrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","carrentPage","setTotalUserCount","totalCount","render","isFetching","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","isFeching","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { followAC, setCarrentPageAC, setTotalUserCountAC, setUserAC, toggelIsFetchingAC, unfollowAC, UsersType } from '../../redux/users-reducer';\r\nimport axios from 'axios';\r\nimport { UsersFunc } from './Users';\r\nimport { Preloader } from '../common/preloader/Preloader';\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCarrentPage: (carrentPage: number) => void\r\n    setTotalUserCount: (totalCount: number) => void\r\n    toggeleIsFetching: (isFetching: boolean) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n}\r\ntype UsersPageMapType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n};\r\n\r\ntype MapStatePropsType = UsersPageMapType\r\n\r\nclass UsersComponent extends React.Component<UsersPageType> {\r\n    componentDidMount() {\r\n        this.props.toggeleIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${this.props.carrentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggeleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUserCount(response.data.totalCount)\r\n\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.toggeleIsFetching(true);\r\n        this.props.setCarrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0//users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggeleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n               {this.props.isFetching ? <Preloader /> : null}\r\n                <UsersFunc\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    carrentPage={this.props.carrentPage}\r\n\r\n                />\r\n            </>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        carrentPage: state.usersPage.carrentPage,\r\n        isFetching: state.usersPage.isFeching,\r\n    }\r\n};\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow: followAC,\r\n    unfollow: unfollowAC,\r\n    setUsers: setUserAC,\r\n    setCarrentPage: setCarrentPageAC,\r\n    setTotalUserCount: setTotalUserCountAC,\r\n    toggeleIsFetching: toggelIsFetchingAC,\r\n})(UsersComponent)\r\n\r\n"]},"metadata":{},"sourceType":"module"}
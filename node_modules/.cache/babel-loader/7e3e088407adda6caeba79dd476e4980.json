{"ast":null,"code":"import _regeneratorRuntime from\"D:/My-proect/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/My-proect/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"D:/My-proect/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{authAPI}from'../api/api';var SET_USER_DATA='SET-USER-DATA';var initialState={id:null,email:null,login:null,isAuth:false};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_USER_DATA:return _objectSpread(_objectSpread(_objectSpread({},state),action.data),{},{isAuth:true});default:return state;};};export var setAuthUserData=function setAuthUserData(id,email,login){return{type:SET_USER_DATA,data:{id:id,email:email,login:login}};};export var getAuthUserData=function getAuthUserData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:authAPI.mu().then(function(response){if(response.data.resultCode===0){var _response$data$data=response.data.data,id=_response$data$data.id,email=_response$data$data.email,login=_response$data$data.login;dispatch(setAuthUserData(id,email,login));}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["D:/My-proect/social-network/src/redux/auth-reducer.tsx"],"names":["authAPI","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","mu","then","response","resultCode"],"mappings":"kbAEA,OAASA,OAAT,KAAwB,YAAxB,CAMA,GAAMC,CAAAA,aAAa,CAAG,eAAtB,CASA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,EAAE,CAAE,IADa,CAEjBC,KAAK,CAAE,IAFU,CAGjBC,KAAK,CAAE,IAHU,CAIjBC,MAAM,CAAE,KAJS,CAArB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA4E,IAA3EC,CAAAA,KAA2E,2DAApDN,YAAoD,IAAtCO,CAAAA,MAAsC,2CAE5F,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,aAAL,CACI,oDACOO,KADP,EAEOC,MAAM,CAACE,IAFd,MAGIL,MAAM,CAAE,IAHZ,GAKJ,QACI,MAAOE,CAAAA,KAAP,CARR,CASC,CACJ,CAZD,CAcA,MAAO,IAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAET,EAAF,CAAcC,KAAd,CAA6BC,KAA7B,CAA+C,CAC1E,MAAO,CACHK,IAAI,CAAET,aADH,CAEHU,IAAI,CAAE,CAACR,EAAE,CAAFA,EAAD,CAAKC,KAAK,CAALA,KAAL,CAAYC,KAAK,CAALA,KAAZ,CAFH,CAAP,CAIH,CALM,CAOP,MAAO,IAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAqE,CAChG,+FAAO,iBAAOC,QAAP,kHACHd,OAAO,CAACe,EAAR,GACKC,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,GAA6B,CAAjC,CAAoC,yBACLD,QAAQ,CAACN,IAAT,CAAcA,IADT,CAC1BR,EAD0B,qBAC1BA,EAD0B,CACtBC,KADsB,qBACtBA,KADsB,CACfC,KADe,qBACfA,KADe,CAEhCS,QAAQ,CAACF,eAAe,CAACT,EAAD,CAAKC,KAAL,CAAYC,KAAZ,CAAhB,CAAR,CACH,CACJ,CANL,EADG,sDAAP,+DASH,CAVM,CAaP,cAAeE,CAAAA,WAAf","sourcesContent":["import React from 'react';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { authAPI } from '../api/api';\r\nimport { AppStateType } from './redux-store';\r\n\r\n\r\ntype ActionType = ReturnType<typeof setAuthUserData>\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\nexport type InitStateType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login:  string | null,\r\n    isAuth: boolean,\r\n};\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state: InitStateType = initialState, action: ActionType): InitStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA :\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default: \r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setAuthUserData = ( id: number, email: string, login: string) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {id, email, login}\r\n    } as const\r\n};\r\n\r\nexport const getAuthUserData = (): ThunkAction<Promise<void>, AppStateType, unknown, ActionType> => {\r\n    return async (dispatch) => {\r\n        authAPI.mu()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let { id, email, login } = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login))\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer"]},"metadata":{},"sourceType":"module"}
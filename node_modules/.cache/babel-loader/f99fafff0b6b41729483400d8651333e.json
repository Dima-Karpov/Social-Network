{"ast":null,"code":"import React from'react';import{addPostAC}from'../../../redux/profile-reducer';import s from'./MyPosts.module.css';import{Post}from'./Post/Post';import{connect}from'react-redux';import{AddMyPostFromRedux}from'./AddMyPostForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MyPosts=function MyPosts(props){var postsElement=props.posts.map(function(p){return/*#__PURE__*/_jsx(Post,{id:p.id,message:p.message,likesCount:p.likesCount},p.id);});var newPostElement=/*#__PURE__*/React.createRef();// ссылка на HTML элемент \n// const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n//     if (e.key === 'Enter') {\n//     }\n// };\nvar addNewMyPost=function addNewMyPost(values){props.addPost(values.newPostText);};return/*#__PURE__*/_jsxs(\"div\",{className:s.postsBlock,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(AddMyPostFromRedux,{onSubmit:addNewMyPost}),/*#__PURE__*/_jsx(\"div\",{className:s.posts,children:postsElement})]});};var mapStateToProps=function mapStateToProps(state){return{posts:state.profilePage.posts,newPostText:state.profilePage.newPostText};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addPost:function addPost(newPostText){dispatch(addPostAC(newPostText));}};};export var MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);","map":{"version":3,"sources":["D:/My-proect/social-network/src/сomponents/Profile/MyPosts/MyPosts.tsx"],"names":["React","addPostAC","s","Post","connect","AddMyPostFromRedux","MyPosts","props","postsElement","posts","map","p","id","message","likesCount","newPostElement","createRef","addNewMyPost","values","addPost","newPostText","postsBlock","mapStateToProps","state","profilePage","mapDispatchToProps","dispatch","MyPostsContainer"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAqC,OAArC,CACA,OAASC,SAAT,KAAqC,gCAArC,CAEA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAASC,IAAT,KAAqB,aAArB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,iBAAnC,C,wFAeA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAA6B,CAEhD,GAAMC,CAAAA,YAAY,CAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,SAAAC,CAAC,qBAAI,KAAC,IAAD,EAAM,EAAE,CAAEA,CAAC,CAACC,EAAZ,CAAgB,OAAO,CAAED,CAAC,CAACE,OAA3B,CAAoC,UAAU,CAAEF,CAAC,CAACG,UAAlD,EAAmEH,CAAC,CAACC,EAArE,CAAJ,EAAjB,CAArB,CAEA,GAAMG,CAAAA,cAAc,cAAGf,KAAK,CAACgB,SAAN,EAAvB,CAA+D;AAE/D;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAiB,CAClCX,KAAK,CAACY,OAAN,CAAcD,MAAM,CAACE,WAArB,EACH,CAFD,CAIA,mBACI,aAAK,SAAS,CAAElB,CAAC,CAACmB,UAAlB,wBACI,gCADJ,cAEY,KAAC,kBAAD,EAAoB,QAAQ,CAAEJ,YAA9B,EAFZ,cAGI,YAAK,SAAS,CAAEf,CAAC,CAACO,KAAlB,UACKD,YADL,EAHJ,GADJ,CASH,CAxBM,CA0BP,GAAMc,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAA4C,CAChE,MAAO,CACHd,KAAK,CAAEc,KAAK,CAACC,WAAN,CAAkBf,KADtB,CAEHW,WAAW,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,WAF5B,CAAP,CAIH,CALD,CAMA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAA8C,CACrE,MAAO,CACHP,OAAO,CAAE,iBAACC,WAAD,CAAyB,CAC9BM,QAAQ,CAACzB,SAAS,CAACmB,WAAD,CAAV,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CASA,MAAO,IAAMO,CAAAA,gBAAgB,CAAGvB,OAAO,CAACkB,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CnB,OAA7C,CAAzB","sourcesContent":["import React, { KeyboardEvent } from 'react';\r\nimport { addPostAC, PostsType } from '../../../redux/profile-reducer';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux'\r\nimport { AddMyPostFromRedux } from './AddMyPostForm';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n};\r\n\r\ntype MapStatePropsType = ProfilePageType\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostElement: string) => void\r\n};\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    const postsElement = props.posts.map(p => <Post id={p.id} message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    const newPostElement = React.createRef<HTMLTextAreaElement>(); // ссылка на HTML элемент \r\n\r\n    // const onKeyPressSendPost = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    //     if (e.key === 'Enter') {\r\n    //     }\r\n    // };\r\n\r\n    const addNewMyPost = (values: any) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n                    <AddMyPostFromRedux onSubmit={addNewMyPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPostText: string) => {\r\n            dispatch(addPostAC(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);"]},"metadata":{},"sourceType":"module"}
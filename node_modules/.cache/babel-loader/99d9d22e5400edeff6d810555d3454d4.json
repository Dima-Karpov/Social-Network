{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst initialState = {\n  users: [],\n  pageSize: 20,\n  totalUsersCount: 100,\n  carrentPage: 100\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        carrentPage: action.carrentPage\n      };\n\n    case SET_TOTAL_USER_COUNT:\n      return { ...state,\n        carrentPage: action.count\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => {\n  return {\n    type: FOLLOW,\n    userID: userID\n  };\n};\nexport const unfollowAC = userID => {\n  return {\n    type: UNFOLLOW,\n    userID: userID\n  };\n};\nexport const setUserAC = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCarrentPageAC = carrentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    carrentPage\n  };\n};\nexport const setTotalUserCountAC = totalUsersCount => {\n  return {\n    type: SET_TOTAL_USER_COUNT,\n    count: totalUsersCount\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/My-proect/social-network/src/redux/users-reducer.tsx"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","initialState","users","pageSize","totalUsersCount","carrentPage","usersReducer","state","action","type","map","u","id","userID","followed","count","followAC","unfollowAC","setUserAC","setCarrentPageAC","setTotalUserCountAC"],"mappings":"AA4BA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,oBAAoB,GAAG,uBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,eAAe,EAAE,GAHA;AAIjBC,EAAAA,WAAW,EAAE;AAJI,CAArB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAuB,GAAGN,YAA3B,EAAyCO,MAAzC,KAAkF;AAEnG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,MAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKd,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKb,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFX,OAAP;;AAIJ,SAAKH,gBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAFjB,OAAP;;AAIJ,SAAKL,oBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,WAAW,EAAEG,MAAM,CAACO;AAFjB,OAAP;;AAIJ;AACI,aAAOR,KAAP;AA3CR;AA6CH,CA/CD;;AAiDA,OAAO,MAAMS,QAAQ,GAAIH,MAAD,IAAoB;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAAEb,MADH;AAEHiB,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMI,UAAU,GAAIJ,MAAD,IAAoB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEZ,QADH;AAEHgB,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMK,SAAS,GAAIhB,KAAD,IAA6B;AAClD,SAAO;AACHO,IAAAA,IAAI,EAAEX,SADH;AAEHI,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAMP,OAAO,MAAMiB,gBAAgB,GAAId,WAAD,IAAyB;AACrD,SAAO;AACHI,IAAAA,IAAI,EAAEV,gBADH;AAEHM,IAAAA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,MAAMe,mBAAmB,GAAIhB,eAAD,IAA6B;AAC5D,SAAO;AACHK,IAAAA,IAAI,EAAET,oBADH;AAEHe,IAAAA,KAAK,EAAEX;AAFJ,GAAP;AAIH,CALM;AAOP,eAAeE,YAAf","sourcesContent":["import React from 'react';\r\n\r\ntype PhotosType = {\r\n    small: null\r\n    large: null\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n};\r\n\r\ntype ActionType = ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setUserAC> |\r\n    ReturnType<typeof setCarrentPageAC> |\r\n    ReturnType<typeof setTotalUserCountAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USERS-COUNT';\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>, \r\n    pageSize: 20,\r\n    totalUsersCount: 100,\r\n    carrentPage: 100,\r\n};\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                carrentPage: action.carrentPage\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                carrentPage: action.count\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const unfollowAC = (userID: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const setUserAC = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    } as const\r\n};\r\nexport const setCarrentPageAC = (carrentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        carrentPage,\r\n    } as const\r\n}\r\nexport const setTotalUserCountAC = (totalUsersCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        count: totalUsersCount,\r\n    } as const\r\n}\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}
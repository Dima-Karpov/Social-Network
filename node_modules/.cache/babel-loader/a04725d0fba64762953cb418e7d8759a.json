{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Users\\\\UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setCarrentPageAC, setTotalUserCount, setUsers, toggelInProgressAC, toggelIsFetching, unfollowAC, getUsersThunkCreator } from '../../redux/users-reducer';\nimport { UsersFunc } from './Users';\nimport { Preloader } from '../common/preloader/Preloader';\nimport { usersAPI } from '../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.toggelIsFetching(true);\n      this.props.setCarrentPage(pageNumber);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggelIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.carrentPage, this.props.pageSize); // this.props.toggeleIsFetching(true);\n    // usersAPI.getUsers(this.props.carrentPage, this.props.pageSize)\n    //     .then(data => {\n    //         this.props.toggeleIsFetching(false);\n    //         this.props.setUsers(data.items)\n    //         this.props.setTotalUserCount(data.totalCount)\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(UsersFunc, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow,\n        carrentPage: this.props.carrentPage,\n        toggelInProgress: this.props.toggelInProgress,\n        followingInProgress: this.props.followingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    carrentPage: state.usersPage.carrentPage,\n    isFetching: state.usersPage.isFeching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport const UsersContainer = connect(mapStateToProps, {\n  follow: followAC,\n  unfollow: unfollowAC,\n  setUsers,\n  setCarrentPage: setCarrentPageAC,\n  setTotalUserCount,\n  toggelIsFetching,\n  toggelInProgress: toggelInProgressAC,\n  getUsersThunkCreator\n})(UsersComponent);","map":{"version":3,"sources":["D:/My-proect/social-network/src/—Åomponents/Users/UsersContainer.tsx"],"names":["React","connect","followAC","setCarrentPageAC","setTotalUserCount","setUsers","toggelInProgressAC","toggelIsFetching","unfollowAC","getUsersThunkCreator","UsersFunc","Preloader","usersAPI","UsersComponent","Component","onPageChanged","pageNumber","props","setCarrentPage","getUsers","pageSize","then","data","items","componentDidMount","carrentPage","render","isFetching","totalUsersCount","users","unfollow","follow","toggelInProgress","followingInProgress","mapStateToProps","state","usersPage","isFeching","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { followAC, setCarrentPageAC, setTotalUserCount, setUsers, toggelInProgressAC,\r\n    toggelIsFetching, unfollowAC, UsersType, getUsersThunkCreator } from '../../redux/users-reducer';\r\nimport { UsersFunc } from './Users';\r\nimport { Preloader } from '../common/preloader/Preloader';\r\nimport { usersAPI } from '../../api/api';\r\n\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCarrentPage: (carrentPage: number) => void\r\n    setTotalUserCount: (totalCount: number) => void\r\n    toggelIsFetching: (isFetching: boolean) => void\r\n    toggelInProgress: (isFetching: boolean, userID: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    \r\n};\r\ntype UsersPageMapType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    carrentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n};\r\n\r\ntype MapStatePropsType = UsersPageMapType\r\n\r\nclass UsersComponent extends React.Component<UsersPageType> {\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.carrentPage, this.props.pageSize)\r\n        // this.props.toggeleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.carrentPage, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggeleIsFetching(false);\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.setTotalUserCount(data.totalCount)\r\n        //     })\r\n    };\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.toggelIsFetching(true);\r\n        this.props.setCarrentPage(pageNumber);\r\n\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggelIsFetching(false);\r\n                this.props.setUsers(data.items)\r\n            })\r\n    };\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <UsersFunc\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    carrentPage={this.props.carrentPage}\r\n                    toggelInProgress={this.props.toggelInProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n\r\n                />\r\n            </>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        carrentPage: state.usersPage.carrentPage,\r\n        isFetching: state.usersPage.isFeching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n    }\r\n};\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    follow: followAC,\r\n    unfollow: unfollowAC,\r\n    setUsers,\r\n    setCarrentPage: setCarrentPageAC,\r\n    setTotalUserCount,\r\n    toggelIsFetching,\r\n    toggelInProgress: toggelInProgressAC,\r\n    getUsersThunkCreator,\r\n\r\n})(UsersComponent)\r\n\r\n"]},"metadata":{},"sourceType":"module"}
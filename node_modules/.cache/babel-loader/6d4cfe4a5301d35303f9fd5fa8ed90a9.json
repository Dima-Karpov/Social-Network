{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Dialogs\\\\Dialogs.tsx\";\nimport React from 'react';\nimport { sendMessageC, updateNewMessageC } from '../../redux/dialogs-reduser';\nimport { DialogItem } from './DialogItem/DialogItem';\nimport s from './Dialogs.module.css';\nimport { Message } from './Message/Message';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\nimport { Field, reduxForm } from 'redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  const dialogsElement = props.dialogsPage.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 63\n  }, this));\n  const messagesElement = props.dialogsPage.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 65\n  }, this));\n  const newMessageBody = props.dialogsPage.newMessageBody;\n\n  const onSendMessageClick = () => {\n    props.sendMessage();\n  };\n\n  const onKeyPressSendMessage = e => {\n    if (e.key === 'Enter') {\n      onSendMessageClick();\n    }\n  };\n\n  const onNewMessageChange = e => {\n    let body = e.target.value;\n    props.onNewMessageChange(body);\n  };\n\n  const addNewMessage = () => {\n    alert('New Messa');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItem,\n      children: dialogsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewMessageChange: body => {\n      dispatch(updateNewMessageC(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageC());\n    }\n  };\n};\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        component: \"textarea\",\n        name: \"newMessageBody\",\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = AddMessageForm;\nconst AddMessageFormRedux = reduxForm({\n  form: 'dialogAddMessageForm'\n})(AddMessageForm);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), wihtAuthRedirect)(Dialogs);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dialogs\");\n$RefreshReg$(_c2, \"AddMessageForm\");","map":{"version":3,"sources":["D:/My-proect/social-network/src/—Åomponents/Dialogs/Dialogs.tsx"],"names":["React","sendMessageC","updateNewMessageC","DialogItem","s","Message","connect","compose","wihtAuthRedirect","Field","reduxForm","Dialogs","props","dialogsElement","dialogsPage","dialogs","map","d","name","id","messagesElement","messages","m","message","newMessageBody","onSendMessageClick","sendMessage","onKeyPressSendMessage","e","key","onNewMessageChange","body","target","value","addNewMessage","alert","dialogsItem","mapStateToProps","state","mapDispatchToProps","dispatch","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkD,OAAlD;AACA,SAAoCC,YAApC,EAAkDC,iBAAlD,QAA2E,6BAA3E;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAmBC,OAAnB,QAAkC,OAAlC;AAEA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;;AAqBC,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAE1C,QAAMC,cAAc,GAAGD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8BC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,EAAE,EAAED,CAAC,CAACE;AAAhC,KAAyCF,CAAC,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,UAAnC,CAAvB;AACA,QAAMC,eAAe,GAAGR,KAAK,CAACE,WAAN,CAAkBO,QAAlB,CAA2BL,GAA3B,CAA+BM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB,KAAkCD,CAAC,CAACH,EAApC;AAAA;AAAA;AAAA;AAAA,UAApC,CAAxB;AACA,QAAMK,cAAc,GAAGZ,KAAK,CAACE,WAAN,CAAkBU,cAAzC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC7Bb,IAAAA,KAAK,CAACc,WAAN;AACH,GAFD;;AAGA,QAAMC,qBAAqB,GAAIC,CAAD,IAA2C;AACrE,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACnBJ,MAAAA,kBAAkB;AACrB;AACJ,GAJD;;AAMA,QAAMK,kBAAkB,GAAIF,CAAD,IAAyC;AAChE,QAAIG,IAAI,GAAGH,CAAC,CAACI,MAAF,CAASC,KAApB;AACArB,IAAAA,KAAK,CAACkB,kBAAN,CAAyBC,IAAzB;AACH,GAHD;;AAKA,QAAMG,aAAa,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,WAAD,CAAL;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE/B,CAAC,CAACW,OAAlB;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAEX,CAAC,CAACgC,WAAlB;AAAA,gBACKvB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAK,MAAA,SAAS,EAAET,CAAC,CAACiB,QAAlB;AAAA,8BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAxCA;;KAAMT,O;;AA4CP,MAAM0B,eAAe,GAAIC,KAAD,IAAyB;AAC7C,SAAO;AACHxB,IAAAA,WAAW,EAAEwB,KAAK,CAACxB;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMyB,kBAAkB,GAAIC,QAAD,IAA8C;AACrE,SAAO;AACHV,IAAAA,kBAAkB,EAAGC,IAAD,IAAkB;AAClCS,MAAAA,QAAQ,CAACtC,iBAAiB,CAAC6B,IAAD,CAAlB,CAAR;AACH,KAHE;AAIHL,IAAAA,WAAW,EAAE,MAAM;AACfc,MAAAA,QAAQ,CAACvC,YAAY,EAAb,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAeA,MAAMwC,cAAc,GAAI7B,KAAD,IAAoC;AACvD,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAAC8B,YAAtB;AAAA,2BACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC,gBAAjC;AAAkD,QAAA,WAAW,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAVD;;MAAMD,c;AAYN,MAAME,mBAAmB,GAAGjC,SAAS,CAAC;AAACkC,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAA0CH,cAA1C,CAA5B;AAIA,eAAelC,OAAO,CAClBD,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CADW,EAElB/B,gBAFkB,CAAP,CAGbG,OAHa,CAAf","sourcesContent":["import React, { ChangeEvent, KeyboardEvent } from 'react';\r\nimport { DialogsType, MessagesType, sendMessageC, updateNewMessageC } from '../../redux/dialogs-reduser';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n    \r\n};\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onNewMessageChange: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType \r\n\r\n\r\n const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    const messagesElement = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    const newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    const onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    };\r\n    const onKeyPressSendMessage = (e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n    const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value;\r\n        props.onNewMessageChange(body)\r\n    };\r\n\r\n    const addNewMessage = () => {\r\n        alert('New Messa')\r\n    }\r\n  \r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageFormRedux />\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageC(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageC())\r\n        }\r\n    }\r\n};\r\n\r\ntype AddMessageFormPropsType = {\r\n    handleSubmit: any\r\n}\r\n\r\nconst AddMessageForm = (props: AddMessageFormPropsType) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component='textarea' name='newMessageBody' placeholder='Enter your message' />\r\n                <div><button>Send</button></div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    wihtAuthRedirect\r\n)(Dialogs)\r\n"]},"metadata":{},"sourceType":"module"}
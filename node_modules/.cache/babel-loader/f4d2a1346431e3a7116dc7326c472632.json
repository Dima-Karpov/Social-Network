{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGEL_IS_FETCHING = 'TOGGEL-IS-FETCHING';\nconst TOGGEL_IN_FOLLOWING_PROGRESS = 'TOGGEK-IN-PROGRESS';\nconst initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 100,\n  carrentPage: 1,\n  isFeching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userID) {\n              return { ...u,\n                followed: true\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case UNFOLLOW:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userID) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          carrentPage: action.carrentPage\n        };\n      }\n\n    case SET_TOTAL_USER_COUNT:\n      {\n        return { ...state,\n          carrentPage: action.count\n        };\n      }\n\n    case TOGGEL_IS_FETCHING:\n      {\n        return { ...state,\n          isFeching: action.isFetching\n        };\n      }\n\n    case TOGGEL_IN_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: [...state.followingInProgress].filter()\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => {\n  return {\n    type: FOLLOW,\n    userID: userID\n  };\n};\nexport const unfollowAC = userID => {\n  return {\n    type: UNFOLLOW,\n    userID: userID\n  };\n};\nexport const setUserAC = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport const setCarrentPageAC = carrentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    carrentPage\n  };\n};\nexport const setTotalUserCountAC = totalUsersCount => {\n  return {\n    type: SET_TOTAL_USER_COUNT,\n    count: totalUsersCount\n  };\n};\nexport const toggelIsFetchingAC = isFetching => {\n  return {\n    type: TOGGEL_IS_FETCHING,\n    isFetching\n  };\n};\nexport const toggelInProgressAC = isFetching => {\n  return {\n    type: TOGGEL_IN_FOLLOWING_PROGRESS,\n    isFetching\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/My-proect/social-network/src/redux/users-reducer.tsx"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGEL_IS_FETCHING","TOGGEL_IN_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","carrentPage","isFeching","followingInProgress","usersReducer","state","action","type","map","u","id","userID","followed","count","isFetching","filter","followAC","unfollowAC","setUserAC","setCarrentPageAC","setTotalUserCountAC","toggelIsFetchingAC","toggelInProgressAC"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\ntype PhotosType = {\r\n    small: null\r\n    large: null\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n};\r\n\r\ntype ActionType = ReturnType<typeof followAC>\r\n    | ReturnType<typeof unfollowAC>\r\n    | ReturnType<typeof setUserAC>\r\n    | ReturnType<typeof setCarrentPageAC>\r\n    | ReturnType<typeof setTotalUserCountAC>\r\n    | ReturnType<typeof toggelIsFetchingAC>\r\n    | ReturnType<typeof toggelInProgressAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGEL_IS_FETCHING = 'TOGGEL-IS-FETCHING';\r\nconst TOGGEL_IN_FOLLOWING_PROGRESS = 'TOGGEK-IN-PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 100,\r\n    carrentPage: 1,\r\n    isFeching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                carrentPage: action.carrentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USER_COUNT: {\r\n            return {\r\n                ...state,\r\n                carrentPage: action.count\r\n            }\r\n        }\r\n        case TOGGEL_IS_FETCHING: {\r\n            return {\r\n                ...state, isFeching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGEL_IN_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: [...state.followingInProgress].filter()\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const unfollowAC = (userID: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const setUserAC = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    } as const\r\n};\r\nexport const setCarrentPageAC = (carrentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        carrentPage,\r\n    } as const\r\n}\r\nexport const setTotalUserCountAC = (totalUsersCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        count: totalUsersCount,\r\n    } as const\r\n}\r\nexport const toggelIsFetchingAC = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGEL_IS_FETCHING,\r\n        isFetching,\r\n    } as const\r\n}\r\nexport const toggelInProgressAC = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGEL_IN_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n    } as const\r\n}\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}
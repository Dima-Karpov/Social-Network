{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Dialogs\\\\Dialogs.tsx\";\nimport React from 'react';\nimport { sendMessageC } from '../../redux/dialogs-reduser';\nimport { DialogItem } from './DialogItem/DialogItem';\nimport s from './Dialogs.module.css';\nimport { Message } from './Message/Message';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\nimport { AddMessageFormRedux } from './AddMessageForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  const dialogsElement = props.dialogsPage.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 63\n  }, this));\n  const messagesElement = props.dialogsPage.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 65\n  }, this));\n  const newMessageBody = props.dialogsPage.newMessageBody;\n\n  const addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItem,\n      children: dialogsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {\n          onSubmit: addNewMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\n\nconst mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMessageBody => {\n      dispatch(sendMessageC(newMessageBody));\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), wihtAuthRedirect)(Dialogs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["D:/My-proect/social-network/src/—Åomponents/Dialogs/Dialogs.tsx"],"names":["React","sendMessageC","DialogItem","s","Message","connect","compose","wihtAuthRedirect","AddMessageFormRedux","Dialogs","props","dialogsElement","dialogsPage","dialogs","map","d","name","id","messagesElement","messages","m","message","newMessageBody","addNewMessage","values","sendMessage","dialogsItem","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkD,OAAlD;AACA,SAAoCC,YAApC,QAAwD,6BAAxD;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAmBC,OAAnB,QAAkC,OAAlC;AAEA,SAASC,gBAAT,QAAiC,4BAAjC;AAEA,SAASC,mBAAT,QAAoC,kBAApC;;;AAoBA,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAEzC,QAAMC,cAAc,GAAGD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8BC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,EAAE,EAAED,CAAC,CAACE;AAAhC,KAAyCF,CAAC,CAACE,EAA3C;AAAA;AAAA;AAAA;AAAA,UAAnC,CAAvB;AACA,QAAMC,eAAe,GAAGR,KAAK,CAACE,WAAN,CAAkBO,QAAlB,CAA2BL,GAA3B,CAA+BM,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC;AAApB,KAAkCD,CAAC,CAACH,EAApC;AAAA;AAAA;AAAA;AAAA,UAApC,CAAxB;AACA,QAAMK,cAAc,GAAGZ,KAAK,CAACE,WAAN,CAAkBU,cAAzC;;AAGA,QAAMC,aAAa,GAAIC,MAAD,IAAiB;AACnCd,IAAAA,KAAK,CAACe,WAAN,CAAkBD,MAAM,CAACF,cAAzB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACU,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACuB,WAAlB;AAAA,gBACKf;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAER,CAAC,CAACgB,QAAlB;AAAA,8BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,mBAAD;AAAqB,UAAA,QAAQ,EAAEK;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1BD;;KAAMd,O;;AA6BN,MAAMkB,eAAe,GAAIC,KAAD,IAAyB;AAC7C,SAAO;AACHhB,IAAAA,WAAW,EAAEgB,KAAK,CAAChB;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMiB,kBAAkB,GAAIC,QAAD,IAA8C;AACrE,SAAO;AACHL,IAAAA,WAAW,EAAGH,cAAD,IAA4B;AACrCQ,MAAAA,QAAQ,CAAC7B,YAAY,CAACqB,cAAD,CAAb,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAehB,OAAO,CAClBD,OAAO,CAACsB,eAAD,EAAkBE,kBAAlB,CADW,EAElBtB,gBAFkB,CAAP,CAGbE,OAHa,CAAf","sourcesContent":["import React, { ChangeEvent, KeyboardEvent } from 'react';\r\nimport { DialogsType, MessagesType, sendMessageC } from '../../redux/dialogs-reduser';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport { Message } from './Message/Message';\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch, compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { wihtAuthRedirect } from '../../hoc/wihtAuthRedirect';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nexport type DialogsPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n\r\n};\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElement = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    const messagesElement = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    const newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n\r\n    const addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElement}</div>\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessageC(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    wihtAuthRedirect\r\n)(Dialogs)\r\n"]},"metadata":{},"sourceType":"module"}
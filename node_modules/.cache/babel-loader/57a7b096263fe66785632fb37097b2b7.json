{"ast":null,"code":"var _jsxFileName = \"D:\\\\My-proect\\\\social-network\\\\src\\\\\\u0441omponents\\\\Profile\\\\ProfileContainer.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { getUsersProfile } from '../../redux/profile-reducer';\nimport { Profile } from './Profile';\nimport s from './Profile.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileAPIContainer extends React.Component {\n  componentDidMount() {\n    const userID = this.props.match.params.userId || 2;\n    this.props.getUsersProfile(userID);\n  }\n\n  render() {\n    if (this.props.isAuth === false) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.descriptionBlock,\n      children: /*#__PURE__*/_jsxDEV(Profile, {\n        profile: this.props.profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet WithUrlDataContainerComponent = withRouter(ProfileAPIContainer);\n_c = WithUrlDataContainerComponent;\nexport default connect(mapStateToProps, {\n  getUsersProfile\n})(WithUrlDataContainerComponent); // {...this.props}\n\nvar _c;\n\n$RefreshReg$(_c, \"WithUrlDataContainerComponent\");","map":{"version":3,"sources":["D:/My-proect/social-network/src/сomponents/Profile/ProfileContainer.tsx"],"names":["React","connect","withRouter","Redirect","getUsersProfile","Profile","s","ProfileAPIContainer","Component","componentDidMount","userID","props","match","params","userId","render","isAuth","descriptionBlock","profile","mapStateToProps","state","profilePage","auth","WithUrlDataContainerComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,eAAT,QAA6C,6BAA7C;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,CAAP,MAAc,sBAAd;;;AAYA,MAAMC,mBAAN,SAAkCP,KAAK,CAACQ,SAAxC,CAA0E;AACtEC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAxB,IAAkC,CAAjD;AAEA,SAAKH,KAAL,CAAWP,eAAX,CAA2BM,MAA3B;AACH;;AACDK,EAAAA,MAAM,GAAG;AAEL,QAAG,KAAKJ,KAAL,CAAWK,MAAX,KAAsB,KAAzB,EAAgC;AAC5B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACW,gBAAlB;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhBqE;;AAkB1E,IAAIC,eAAe,GAAIC,KAAD,IAAsB;AACxC,SAAO;AACHF,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADxB;AAEHF,IAAAA,MAAM,EAAEI,KAAK,CAACE,IAAN,CAAWN;AAFhB,GAAP;AAOH,CARD;;AAUA,IAAIO,6BAA6B,GAAGrB,UAAU,CAACK,mBAAD,CAA9C;KAAIgB,6B;AAEJ,eAAetB,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA8CmB,6BAA9C,CAAf,C,CAEA","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUsersProfile, ProfileType } from '../../redux/profile-reducer';\r\nimport { RootState } from '../../redux/redux-store';\r\nimport { Profile } from './Profile';\r\nimport s from './Profile.module.css';\r\n\r\ntype ProfileAPIContainerType = {\r\n    profile: ProfileType\r\n    getUsersProfile: (userID: number) => void\r\n    history: any\r\n    location: any\r\n    match: any\r\n    staticContext: any\r\n    isAuth: boolean\r\n}\r\n\r\nclass ProfileAPIContainer extends React.Component<ProfileAPIContainerType>{\r\n    componentDidMount() {\r\n        const userID = this.props.match.params.userId || 2;\r\n\r\n        this.props.getUsersProfile(userID)\r\n    }\r\n    render() {\r\n\r\n        if(this.props.isAuth === false) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n        return (\r\n            <div className={s.descriptionBlock}>\r\n                <Profile profile={this.props.profile} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileAPIContainer);\r\n\r\nexport default connect(mapStateToProps, { getUsersProfile })(WithUrlDataContainerComponent)\r\n\r\n// {...this.props}"]},"metadata":{},"sourceType":"module"}
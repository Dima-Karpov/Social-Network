{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst initialState = {\n  users: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => {\n  return {\n    type: FOLLOW,\n    userID: userID\n  };\n};\nexport const unfollowAC = userID => {\n  return {\n    type: UNFOLLOW,\n    userID: userID\n  };\n};\nexport const setUserAC = users => {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/My-proect/social-network/src/redux/users-reducer.tsx"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","usersReducer","state","action","type","map","u","id","userID","followed","followAC","unfollowAC","setUserAC"],"mappings":"AA0BA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAuB,GAAGH,YAA3B,EAAyCI,MAAzC,KAAkF;AAEnG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,MAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EACH,GAAGF,CADA;AAEHG,cAAAA,QAAQ,EAAE;AAFP,aAAP;AAIH;;AACD,iBAAOH,CAAP;AACH,SARM;AAFJ,OAAP;;AAYJ,SAAKR,SAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EACP,GAAGG,MAAM,CAACH,KADH;AAFJ,OAAP;;AAKJ;AACI,aAAOE,KAAP;AAlCR;AAoCH,CAtCD;;AAwCA,OAAO,MAAMQ,QAAQ,GAAIF,MAAD,IAAoB;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAAER,MADH;AAEHY,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,UAAU,GAAIH,MAAD,IAAoB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEP,QADH;AAEHW,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALM;AAMP,OAAO,MAAMI,SAAS,GAAIZ,KAAD,IAA6B;AAClD,SAAO;AACHI,IAAAA,IAAI,EAAEN,SADH;AAEHE,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,eAAeC,YAAf","sourcesContent":["import React from 'react';\r\n\r\ntype PhotosType = {\r\n    small: null\r\n    large: null\r\n}\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n};\r\n\r\ntype ActionType = ReturnType<typeof followAC> |\r\n    ReturnType<typeof unfollowAC> |\r\n    ReturnType<typeof setUserAC>\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\n\r\nconst initialState = {\r\n    users: [] as Array<UsersType>\r\n};\r\n\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users,\r\n                ...action.users]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userID: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const unfollowAC = (userID: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userID: userID\r\n    } as const\r\n};\r\nexport const setUserAC = (users: Array<UsersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    } as const\r\n};\r\n\r\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}